{
  "openapi": "3.0.3",
  "info": {
    "title": "API Reference",
    "description": "# Overview\n\n<mark>This API in under construction and should not be used in a production environment</mark>\n\nThe Bizyness API allows customers to create and search for accounting objects such as invoices, clients, payments and to generate various reports.\n\nThis documentation provides information about each endpoint in the API. The right-hand pane of this page shows example requests and responses for each endpoint in cURL and many other languages.\n\n## Getting started\nFollow these steps to start licensing media:\n\n1. Create a Bizyness account\n\n2. Go in your Settings and create an API Key, you can also use the JWT method to authenticate your requests\n\n## Request/Response Format\nThe default response format is JSON. Requests with a message-body use plain JSON to set or update resource attributes. Successful requests will return a 200 OK HTTP status.\n\nSome general information about responses:\n\n- Dates are returned in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601).\n- Resource IDs are returned as strings.\n- Any decimal monetary amount, such as prices or totals, will be returned as strings with two decimal places.\n- Other amounts, such as item counts, are returned as integers.\n\n## Errors\nThe API returns error codes such as 400, 403, 404, and 500 along with information about the error. Here are some common error responses:\n\nA `400 Bad Request` response often means that the request body is improperly formatted or missing required fields. In the case of missing fields, the response includes the name of the field that is missing, as in the example in the right-hand column.\n\nA `401 Unauthorized` response often means that the request did not include a valid authentication.\n\nA `404 Not Found` response can mean that the object you are trying to access does not exist.\n\nA `500 Internal Server Error` response means that an error happened on the server. This can mean that the request is not valid, such as if you try to delete or edit a collection that does not exist, or if the API otherwise can't do what you requested. It can also mean a temporary problem with the API. Check your request and try again or contact us.\n\n## Pagination\nRequests that return multiple items will be restricted to 100 items by default, with a maximum of 250 items. Alternatively the items per page can be specified with the `limit` parameter:\n\n`GET /invoices?limit=200`\n\nThe (zero-based) `offset` query parameter is used to exclude from a response the first N items of a resource collection.\n\n`GET /invoices?offset=10`\n\nYou can combine the `limit` and the `offset` parameters to request a particular set of items. Note that the offset option is applied before the limit option, regardless of its position in the request.\n\nThe total entries will be set in the HTTP header `X-Total-Count`\n\n## Sorting\nMultiple items returned in a request can be sorted using `sort` parameter.\n\n`GET /invoices?sort=+name,-subject`\n\nAttributes used in the `sort` parameter must be part of the requested resources. If multiple attributes are sorted they must be separated by a comma (,). The order of each attribute must be set using either + (ascending) or - (descending). If no sign is set, the default ordering is ascending.\n\n## PUT/PATCH methods\nPUT and PATCH requests are used to update objects identified in the requests' paths:\n\n- PUT method can be used to update all attributes of an object in one call.\n- PATCH method can be used to update partial attributes of an object. This method supports [JSON Patch](https://www.rfc-editor.org/rfc/rfc6902) and [JSON Merge](https://www.rfc-editor.org/rfc/rfc7386). The media type of the request is used to set the proper PATCH method, either `application/json-patch+json` (JSON Path) or `application/merge-patch+json` (JSON Merge).\n\n\n## Dates\nDates used in payloads can use two formats:\n- A long representing the number of milliseconds since the [epoch](https://en.wikipedia.org/wiki/Epoch) of 1970-01-01T00:00:00Z (UTC), exemple `1685267473348`\n- A string representing the date in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601), example `2023-05-28T11:48:21+02:00`\n\nDates used in request parameters for filtering/searching must follow the patter 'yyyy-MM-dd'. Dates will be automatically set to the start/end of the day in the user's timezone: `date_min` time will be set to 00:00:00 and `date_max` time will be set to 23:59:59. \n\n## Rate limits\nAll applications are limited to a certain number of API requests per minute. If your application exceeds its limit, the API returns an error response with a status code of 429.\n\nThe API supports a limit of 10 requests per second.\n",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://virtserver.swaggerhub.com/lpb/bizyness-api/1.0.0",
      "description": "SwaggerHub API Auto Mocking"
    },
    {
      "url": "https://api.bizyness.fr/v1"
    }
  ],
  "security": [
    {
      "ApiKey": []
    },
    {
      "JWTAuth": []
    }
  ],
  "tags": [
    {
      "name": "Authentication",
      "description": "Managing authentication"
    },
    {
      "name": "Invoice",
      "description": "Managing your invoices"
    },
    {
      "name": "Recurring Invoice",
      "description": "Managing your recurring invoices"
    },
    {
      "name": "Credit Note",
      "description": "Managing your credit notes"
    },
    {
      "name": "Quote",
      "description": "Managing your quotes"
    },
    {
      "name": "Delivery Form",
      "description": "Managing your delivery forms"
    },
    {
      "name": "Payment",
      "description": "Managing your payments"
    },
    {
      "name": "Expense",
      "description": "Managing your expenses"
    },
    {
      "name": "Recurring Expense",
      "description": "Managing your recurring expenses"
    },
    {
      "name": "Client",
      "description": "Managing your clients"
    },
    {
      "name": "Supplier",
      "description": "Managing your suppliers"
    },
    {
      "name": "Article",
      "description": "Managing your articles"
    },
    {
      "name": "Bank",
      "description": "Managing your banks"
    },
    {
      "name": "Bank Rule",
      "description": "Managing your bank rules"
    },
    {
      "name": "Activity",
      "description": "Managing your activities"
    },
    {
      "name": "Document",
      "description": "Managing your documents"
    },
    {
      "name": "Report",
      "description": "Managing your reports"
    },
    {
      "name": "Account",
      "description": "Managing your account"
    },
    {
      "name": "Company",
      "description": "Managing your account"
    },
    {
      "name": "Tax",
      "description": "Managing your taxes"
    },
    {
      "name": "Integration",
      "description": "Managing your integrations"
    },
    {
      "name": "Miscellaneous",
      "description": "Transverval ressources"
    }
  ],
  "paths": {
    "/login": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Log in",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthenticationBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Authenticated user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticatedAccount"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/logout": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Log out",
        "responses": {
          "204": {
            "description": "The user was logged out successfully"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/forgot": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Reset password",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ForgotBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "The password was reseted successfully"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/register": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Create account",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "The user was created successfully"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/invoices": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "List all invoices",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "The (zero-based) offset of the first item returned in the collection. In a zero-based offset 0 is a correct value.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of entries to return. If the value exceeds the maximum, then the maximum value will be used.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 250,
              "minimum": 1,
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "The keyword to search for",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date_min",
            "in": "query",
            "description": "Filter records created at or after date",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "2013-01-01"
            }
          },
          {
            "name": "date_max",
            "in": "query",
            "description": "Filter records created at or before date",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "2013-01-31"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort records by attributes",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "activity_id",
            "in": "query",
            "description": "Filter records by activity",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "5d5eca258126ab647499f9bf"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter invoices by their status",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "draft"
            }
          },
          {
            "name": "client_id",
            "in": "query",
            "description": "Filter invoices by client",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "5d5eca258126ab647499f9bf"
            }
          },
          {
            "name": "quote_id",
            "in": "query",
            "description": "Filter invoices by quote",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "5d5eca258126ab647499f9bf"
            }
          },
          {
            "name": "reference_date",
            "in": "query",
            "description": "Filter invoices by client",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "issue_date",
                "paid_date",
                "execution_date"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the list of invoices",
            "headers": {
              "X-Total-Count": {
                "description": "Total entries",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "Create an invoice",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Created invoice",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/invoices/preview": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "Preview the PDF",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Return the PDF file",
            "content": {
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                },
                "examples": {
                  "sampleFile": {
                    "summary": "A sample file",
                    "externalValue": "https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/invoices/bulk_delete": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "Delete multiple invoices",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkDelete"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "The invoice were deleted successfully"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/invoices/export": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "Export invoices",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceExportBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Return the number of exported invoices",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/invoices/import": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "Import invoices",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/invoices_import_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "The invoices were imported"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/invoices/taxes_liability": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "Get applicable taxes",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Tax Liability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxLiability"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/invoices/{id}/finalize": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "Finalize an invoice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Invoice ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Finalized invoice",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/invoices/{id}/payments": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "Retrieve payments",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Invoice ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of payments",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoicePaymentList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "Create an payment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Invoice ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoicePaymentBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Created payment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/invoices/{id}/payments/{paymentId}": {
      "put": {
        "tags": [
          "Invoice"
        ],
        "summary": "Update a payment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Invoice ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          },
          {
            "name": "paymentId",
            "in": "path",
            "description": "Payment ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoicePaymentBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated payment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Invoice"
        ],
        "summary": "Update a payment (partial)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Invoice ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          },
          {
            "name": "paymentId",
            "in": "path",
            "description": "Payment ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/JSONPatchRequestAddReplaceTest"
                    },
                    {
                      "$ref": "#/components/schemas/JSONPatchRequestRemove"
                    },
                    {
                      "$ref": "#/components/schemas/JSONPatchRequestMoveCopy"
                    }
                  ]
                }
              },
              "examples": {
                "AddReplaceTest": {
                  "value": [
                    {
                      "op": "replace",
                      "path": "/lines/0/type",
                      "value": 1
                    }
                  ]
                },
                "Remove": {
                  "value": [
                    {
                      "op": "remove",
                      "path": "/subject"
                    }
                  ]
                },
                "MoveCopy": {
                  "value": [
                    {
                      "op": "copy",
                      "from": "/lines/0/sku",
                      "path": "/lines/1/sku"
                    }
                  ]
                }
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Payment"
              },
              "example": {
                "payment_term": 3,
                "template": "london"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated payment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/invoices/{id}/download": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "Download the PDF",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Invoice ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the PDF file",
            "content": {
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                },
                "examples": {
                  "sampleFile": {
                    "summary": "A sample file",
                    "externalValue": "https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/invoices/{id}/credit_notes": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "Retrieve credit notes",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Invoice ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of credit notes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditNoteList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/invoices/{id}/attachments": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "Add a list of attachments",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Invoice ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/id_attachments_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated invoice",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/invoices/{id}/attachments/{attachmentIndex}": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "Download an attachment file",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Invoice ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          },
          {
            "name": "attachmentIndex",
            "in": "path",
            "description": "Attachment index",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "example": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the attachment file",
            "content": {
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                },
                "examples": {
                  "sampleFile": {
                    "summary": "A sample file",
                    "externalValue": "https://file-examples.com/storage/fe954b025e6370d449e6aa6/2017/10/file_example_PNG_500kB.png"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Invoice"
        ],
        "summary": "Delete an attachment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Invoice ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          },
          {
            "name": "attachmentIndex",
            "in": "path",
            "description": "Attachment index",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "example": 0
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The attachment was deleted successfully"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/invoices/{id}": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "Retrieve an invoice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Invoice ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return a single invoice",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Invoice"
        ],
        "summary": "Update an invoice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Invoice ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InvoiceBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated invoice",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Invoice"
        ],
        "summary": "Delete an invoice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Invoice ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The invoice was deleted successfully"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Invoice"
        ],
        "summary": "Update an invoice (partial)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Invoice ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/JSONPatchRequestAddReplaceTest"
                    },
                    {
                      "$ref": "#/components/schemas/JSONPatchRequestRemove"
                    },
                    {
                      "$ref": "#/components/schemas/JSONPatchRequestMoveCopy"
                    }
                  ]
                }
              },
              "examples": {
                "AddReplaceTest": {
                  "value": [
                    {
                      "op": "replace",
                      "path": "/lines/0/type",
                      "value": 1
                    }
                  ]
                },
                "Remove": {
                  "value": [
                    {
                      "op": "remove",
                      "path": "/subject"
                    }
                  ]
                },
                "MoveCopy": {
                  "value": [
                    {
                      "op": "copy",
                      "from": "/lines/0/sku",
                      "path": "/lines/1/sku"
                    }
                  ]
                }
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Invoice"
              },
              "example": {
                "payment_term": 3,
                "template": "london"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated invoice",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/invoices/{id}/send": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "Send an invoice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Invoice ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillOfSaleSendBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "The invoice was sent successfully"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/recurring_invoices": {
      "get": {
        "tags": [
          "Recurring Invoice"
        ],
        "summary": "List all recurring invoices",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "The (zero-based) offset of the first item returned in the collection. In a zero-based offset 0 is a correct value.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of entries to return. If the value exceeds the maximum, then the maximum value will be used.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 250,
              "minimum": 1,
              "type": "integer",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the list of recurring invoices",
            "headers": {
              "X-Total-Count": {
                "description": "Total entries",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecurringInvoiceList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Recurring Invoice"
        ],
        "summary": "Create a recurring invoice",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecurringInvoiceBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Created recurring invoice",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecurringInvoice"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/recurring_invoices/preview": {
      "post": {
        "tags": [
          "Recurring Invoice"
        ],
        "summary": "Preview the PDF",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecurringInvoiceBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Return the PDF file",
            "content": {
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                },
                "examples": {
                  "sampleFile": {
                    "summary": "A sample file",
                    "externalValue": "https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/recurring_invoices/taxes_liability": {
      "post": {
        "tags": [
          "Recurring Invoice"
        ],
        "summary": "Get applicable taxes",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecurringInvoiceBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Tax Liability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxLiability"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/recurring_invoices/{id}/attachments": {
      "post": {
        "tags": [
          "Recurring Invoice"
        ],
        "summary": "Add a list of attachments",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Recurring invoice ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/id_attachments_body_1"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated recurring invoice",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecurringInvoice"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/recurring_invoices/{id}/attachments/{attachmentIndex}": {
      "get": {
        "tags": [
          "Recurring Invoice"
        ],
        "summary": "Download an attachment file",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Recurring invoice ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          },
          {
            "name": "attachmentIndex",
            "in": "path",
            "description": "Attachment index",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "example": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the attachment file",
            "content": {
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                },
                "examples": {
                  "sampleFile": {
                    "summary": "A sample file",
                    "externalValue": "https://file-examples.com/storage/fe954b025e6370d449e6aa6/2017/10/file_example_PNG_500kB.png"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Recurring Invoice"
        ],
        "summary": "Delete an attachment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Recurring invoice ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          },
          {
            "name": "attachmentIndex",
            "in": "path",
            "description": "Attachment index",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "example": 0
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The attachment was deleted successfully"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/recurring_invoices/{id}/activate": {
      "post": {
        "tags": [
          "Recurring Invoice"
        ],
        "summary": "Activate a recurring invoice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Recurring invoice ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Activated recurring invoice",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecurringInvoice"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/recurring_invoices/{id}/deactivate": {
      "post": {
        "tags": [
          "Recurring Invoice"
        ],
        "summary": "Deactivate a recurring invoice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Recurring invoice ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deactivated recurring invoice",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecurringInvoice"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/recurring_invoices/{id}": {
      "get": {
        "tags": [
          "Recurring Invoice"
        ],
        "summary": "Retrieve a recurring invoice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Recurring invoice ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return a single recurring invoice",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecurringInvoice"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Recurring Invoice"
        ],
        "summary": "Update a recurring invoice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Recurring invoice ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecurringInvoiceBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated recurring invoice",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecurringInvoice"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Recurring Invoice"
        ],
        "summary": "Delete a recurring invoice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Recurring invoice ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The recurring invoice was deleted successfully"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Recurring Invoice"
        ],
        "summary": "Update a recurring invoice (partial)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Recurring invoice ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/JSONPatchRequestAddReplaceTest"
                    },
                    {
                      "$ref": "#/components/schemas/JSONPatchRequestRemove"
                    },
                    {
                      "$ref": "#/components/schemas/JSONPatchRequestMoveCopy"
                    }
                  ]
                }
              },
              "examples": {
                "AddReplaceTest": {
                  "value": [
                    {
                      "op": "replace",
                      "path": "/lines/0/type",
                      "value": 1
                    }
                  ]
                },
                "Remove": {
                  "value": [
                    {
                      "op": "remove",
                      "path": "/subject"
                    }
                  ]
                },
                "MoveCopy": {
                  "value": [
                    {
                      "op": "copy",
                      "from": "/lines/0/sku",
                      "path": "/lines/1/sku"
                    }
                  ]
                }
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RecurringInvoice"
              },
              "example": {
                "payment_term": 3,
                "template": "london"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated recurring invoice",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecurringInvoice"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/quotes": {
      "get": {
        "tags": [
          "Quote"
        ],
        "summary": "List all quotes",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "The (zero-based) offset of the first item returned in the collection. In a zero-based offset 0 is a correct value.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of entries to return. If the value exceeds the maximum, then the maximum value will be used.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 250,
              "minimum": 1,
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "The keyword to search for",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date_min",
            "in": "query",
            "description": "Filter records created at or after date",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "2013-01-01"
            }
          },
          {
            "name": "date_max",
            "in": "query",
            "description": "Filter records created at or before date",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "2013-01-31"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort records by attributes",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "activity_id",
            "in": "query",
            "description": "Filter records by activity",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "5d5eca258126ab647499f9bf"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter quotes by their status",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "draft"
            }
          },
          {
            "name": "client_id",
            "in": "query",
            "description": "Filter quotes by client",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "5d5eca258126ab647499f9bf"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the list of quotes",
            "headers": {
              "X-Total-Count": {
                "description": "Total entries",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuoteList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Quote"
        ],
        "summary": "Create a quote",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuoteBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Created quote",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Quote"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/quotes/preview": {
      "post": {
        "tags": [
          "Quote"
        ],
        "summary": "Preview the PDF",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuoteBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Return the PDF file",
            "content": {
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                },
                "examples": {
                  "sampleFile": {
                    "summary": "A sample file",
                    "externalValue": "https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/quotes/bulk_delete": {
      "post": {
        "tags": [
          "Quote"
        ],
        "summary": "Delete multiple quotes",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkDelete"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "The quotes were deleted successfully"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/quotes/taxes_liability": {
      "post": {
        "tags": [
          "Quote"
        ],
        "summary": "Get applicable taxes",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuoteBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Tax Liability",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxLiability"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/quotes/{id}/finalize": {
      "post": {
        "tags": [
          "Quote"
        ],
        "summary": "Finalize a quote",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Quote ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Finalized quote",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Quote"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/quotes/{id}/bill": {
      "post": {
        "tags": [
          "Quote"
        ],
        "summary": "Bill a quote",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Quote ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuoteBill"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Billed invoice",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuoteBill"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/quotes/{id}/download": {
      "get": {
        "tags": [
          "Quote"
        ],
        "summary": "Download the PDF",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Quote ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the PDF file",
            "content": {
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                },
                "examples": {
                  "sampleFile": {
                    "summary": "A sample file",
                    "externalValue": "https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/quotes/{id}/attachments": {
      "post": {
        "tags": [
          "Quote"
        ],
        "summary": "Add a list of attachments",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Quote ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/id_attachments_body_2"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated quote",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Quote"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/quotes/{id}/annotations": {
      "post": {
        "tags": [
          "Quote"
        ],
        "summary": "Add an annotation",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Quote ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/id_annotations_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated quote",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Quote"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/quotes/{id}/accept": {
      "post": {
        "tags": [
          "Quote"
        ],
        "summary": "Accept a quote",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Quote ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated quote",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Quote"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/quotes/{id}/decline": {
      "post": {
        "tags": [
          "Quote"
        ],
        "summary": "Decline a quote",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Quote ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated quote",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Quote"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/quotes/{id}/attachments/{attachmentIndex}": {
      "get": {
        "tags": [
          "Quote"
        ],
        "summary": "Download an attachment file",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Quote ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          },
          {
            "name": "attachmentIndex",
            "in": "path",
            "description": "Attachment index",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "example": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the attachment file",
            "content": {
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                },
                "examples": {
                  "sampleFile": {
                    "summary": "A sample file",
                    "externalValue": "https://file-examples.com/storage/fe954b025e6370d449e6aa6/2017/10/file_example_PNG_500kB.png"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Quote"
        ],
        "summary": "Delete an attachment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Quote ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          },
          {
            "name": "attachmentIndex",
            "in": "path",
            "description": "Attachment index",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "example": 0
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The attachment was deleted successfully"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/quotes/{id}": {
      "get": {
        "tags": [
          "Quote"
        ],
        "summary": "Retrieve a quote",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Quote ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return a single quote",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Quote"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Quote"
        ],
        "summary": "Update a quote",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Quote ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuoteBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated quote",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Quote"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Quote"
        ],
        "summary": "Delete a quote",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Quote ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The quote was deleted successfully"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Quote"
        ],
        "summary": "Update a quote (partial)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Quote ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/JSONPatchRequestAddReplaceTest"
                    },
                    {
                      "$ref": "#/components/schemas/JSONPatchRequestRemove"
                    },
                    {
                      "$ref": "#/components/schemas/JSONPatchRequestMoveCopy"
                    }
                  ]
                }
              },
              "examples": {
                "AddReplaceTest": {
                  "value": [
                    {
                      "op": "replace",
                      "path": "/lines/0/type",
                      "value": 1
                    }
                  ]
                },
                "Remove": {
                  "value": [
                    {
                      "op": "remove",
                      "path": "/subject"
                    }
                  ]
                },
                "MoveCopy": {
                  "value": [
                    {
                      "op": "copy",
                      "from": "/lines/0/sku",
                      "path": "/lines/1/sku"
                    }
                  ]
                }
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Quote"
              },
              "example": {
                "payment_term": 3,
                "template": "london"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated quote",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Quote"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/quotes/{id}/send": {
      "post": {
        "tags": [
          "Quote"
        ],
        "summary": "Send a quote",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Quote ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillOfSaleSendBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "The quote was sent successfully"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/delivery_forms": {
      "get": {
        "tags": [
          "Delivery Form"
        ],
        "summary": "List all delivery forms",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "The (zero-based) offset of the first item returned in the collection. In a zero-based offset 0 is a correct value.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of entries to return. If the value exceeds the maximum, then the maximum value will be used.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 250,
              "minimum": 1,
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "The keyword to search for",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date_min",
            "in": "query",
            "description": "Filter records created at or after date",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "2013-01-01"
            }
          },
          {
            "name": "date_max",
            "in": "query",
            "description": "Filter records created at or before date",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "2013-01-31"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort records by attributes",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "activity_id",
            "in": "query",
            "description": "Filter records by activity",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "5d5eca258126ab647499f9bf"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter delivery forms by their status",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "draft"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the list of delivery forms",
            "headers": {
              "X-Total-Count": {
                "description": "Total entries",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeliveryFormList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Delivery Form"
        ],
        "summary": "Create a delivery form",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeliveryFormBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Created delivery form",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeliveryForm"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/delivery_forms/preview": {
      "post": {
        "tags": [
          "Delivery Form"
        ],
        "summary": "Preview the PDF",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeliveryFormBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Return the PDF file",
            "content": {
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                },
                "examples": {
                  "sampleFile": {
                    "summary": "A sample file",
                    "externalValue": "https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/delivery_forms/bulk_delete": {
      "post": {
        "tags": [
          "Delivery Form"
        ],
        "summary": "Delete multiple delivery forms",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkDelete"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "The delivery forms were deleted successfully"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/delivery_forms/{id}/finalize": {
      "post": {
        "tags": [
          "Delivery Form"
        ],
        "summary": "Finalize a delivery forms",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Delivery forms ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Finalized delivery forms",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeliveryForm"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/delivery_forms/{id}/download": {
      "get": {
        "tags": [
          "Delivery Form"
        ],
        "summary": "Download the PDF",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Delivery forms ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the PDF file",
            "content": {
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                },
                "examples": {
                  "sampleFile": {
                    "summary": "A sample file",
                    "externalValue": "https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/delivery_forms/{id}/attachments": {
      "post": {
        "tags": [
          "Delivery Form"
        ],
        "summary": "Add a list of attachments",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Delivery forms ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/id_attachments_body_3"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated delivery form",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeliveryForm"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/delivery_forms/{id}/attachments/{attachmentIndex}": {
      "get": {
        "tags": [
          "Delivery Form"
        ],
        "summary": "Download an attachment file",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Delivery forms ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          },
          {
            "name": "attachmentIndex",
            "in": "path",
            "description": "Attachment index",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "example": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the attachment file",
            "content": {
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                },
                "examples": {
                  "sampleFile": {
                    "summary": "A sample file",
                    "externalValue": "https://file-examples.com/storage/fe954b025e6370d449e6aa6/2017/10/file_example_PNG_500kB.png"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Delivery Form"
        ],
        "summary": "Delete an attachment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Delivery forms ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          },
          {
            "name": "attachmentIndex",
            "in": "path",
            "description": "Attachment index",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "example": 0
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The attachment was deleted successfully"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/delivery_forms/{id}": {
      "get": {
        "tags": [
          "Delivery Form"
        ],
        "summary": "Retrieve a delivery form",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Delivery forms ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return a single delivery form",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeliveryForm"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Delivery Form"
        ],
        "summary": "Update a delivery form",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Delivery forms ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeliveryFormBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated delivery form",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeliveryForm"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Delivery Form"
        ],
        "summary": "Delete a delivery form",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Delivery forms ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The delivery form was deleted successfully"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Delivery Form"
        ],
        "summary": "Update a delivery form (partial)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Delivery forms ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/JSONPatchRequestAddReplaceTest"
                    },
                    {
                      "$ref": "#/components/schemas/JSONPatchRequestRemove"
                    },
                    {
                      "$ref": "#/components/schemas/JSONPatchRequestMoveCopy"
                    }
                  ]
                }
              },
              "examples": {
                "AddReplaceTest": {
                  "value": [
                    {
                      "op": "replace",
                      "path": "/lines/0/type",
                      "value": 1
                    }
                  ]
                },
                "Remove": {
                  "value": [
                    {
                      "op": "remove",
                      "path": "/subject"
                    }
                  ]
                },
                "MoveCopy": {
                  "value": [
                    {
                      "op": "copy",
                      "from": "/lines/0/sku",
                      "path": "/lines/1/sku"
                    }
                  ]
                }
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/DeliveryForm"
              },
              "example": {
                "payment_term": 3,
                "template": "london"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated delivery form",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeliveryForm"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/delivery_forms/{id}/send": {
      "post": {
        "tags": [
          "Delivery Form"
        ],
        "summary": "Send a delivery form",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Delivery forms ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillOfSaleSendBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "The delivery form was sent successfully"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/credit_notes": {
      "get": {
        "tags": [
          "Credit Note"
        ],
        "summary": "List all credit notes",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "The (zero-based) offset of the first item returned in the collection. In a zero-based offset 0 is a correct value.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of entries to return. If the value exceeds the maximum, then the maximum value will be used.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 250,
              "minimum": 1,
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "The keyword to search for",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date_min",
            "in": "query",
            "description": "Filter records created at or after date",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "2013-01-01"
            }
          },
          {
            "name": "date_max",
            "in": "query",
            "description": "Filter records created at or before date",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "2013-01-31"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort records by attributes",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "activity_id",
            "in": "query",
            "description": "Filter records by activity",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "5d5eca258126ab647499f9bf"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter credit notes by their status",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "draft"
            }
          },
          {
            "name": "client_id",
            "in": "query",
            "description": "Filter credit notes by client",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "5d5eca258126ab647499f9bf"
            }
          },
          {
            "name": "reference_date",
            "in": "query",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "issue_date",
                "execution_date"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the list of credit notes",
            "headers": {
              "X-Total-Count": {
                "description": "Total entries",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditNoteList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/credit_notes/{id}/payments": {
      "get": {
        "tags": [
          "Credit Note"
        ],
        "summary": "Retrieve payments",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Credit note ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of payments",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoicePaymentList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/credit_notes/{id}/finalize": {
      "post": {
        "tags": [
          "Credit Note"
        ],
        "summary": "Finalize an invoice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Credit note ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Finalized credit note",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditNote"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/credit_notes/preview": {
      "post": {
        "tags": [
          "Credit Note"
        ],
        "summary": "Preview the PDF",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreditNoteBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Return the PDF file",
            "content": {
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                },
                "examples": {
                  "sampleFile": {
                    "summary": "A sample file",
                    "externalValue": "https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/credit_notes/{id}/download": {
      "get": {
        "tags": [
          "Credit Note"
        ],
        "summary": "Download the PDF",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Credit note ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the PDF file",
            "content": {
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                },
                "examples": {
                  "sampleFile": {
                    "summary": "A sample file",
                    "externalValue": "https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/credit_notes/{id}": {
      "get": {
        "tags": [
          "Credit Note"
        ],
        "summary": "Retrieve a credit note",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Credit note ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return a single credit note",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditNote"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Credit Note"
        ],
        "summary": "Update a credit note",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Credit note ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreditNoteBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated credit note",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditNote"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Credit Note"
        ],
        "summary": "Delete a credit note",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Credit note ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The credit note was deleted successfully"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Credit Note"
        ],
        "summary": "Update a credit note (partial)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Credit note ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/JSONPatchRequestAddReplaceTest"
                    },
                    {
                      "$ref": "#/components/schemas/JSONPatchRequestRemove"
                    },
                    {
                      "$ref": "#/components/schemas/JSONPatchRequestMoveCopy"
                    }
                  ]
                }
              },
              "examples": {
                "AddReplaceTest": {
                  "value": [
                    {
                      "op": "replace",
                      "path": "/lines/0/type",
                      "value": 1
                    }
                  ]
                },
                "Remove": {
                  "value": [
                    {
                      "op": "remove",
                      "path": "/subject"
                    }
                  ]
                },
                "MoveCopy": {
                  "value": [
                    {
                      "op": "copy",
                      "from": "/lines/0/sku",
                      "path": "/lines/1/sku"
                    }
                  ]
                }
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CreditNote"
              },
              "example": {
                "payment_term": 3,
                "template": "london"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated credit note",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditNote"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/credit_notes/{id}/send": {
      "post": {
        "tags": [
          "Credit Note"
        ],
        "summary": "Send a credit note",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Credit note ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillOfSaleSendBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "The credit note was sent successfully"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/countries": {
      "get": {
        "tags": [
          "Miscellaneous"
        ],
        "summary": "List of supported countries",
        "responses": {
          "200": {
            "description": "Return the list of countries",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountryList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/currencies": {
      "get": {
        "tags": [
          "Miscellaneous"
        ],
        "summary": "List of supported currencies",
        "responses": {
          "200": {
            "description": "Return the list of currencies",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrencyList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/vat_rates": {
      "get": {
        "tags": [
          "Miscellaneous"
        ],
        "summary": "List of supported VAT rates",
        "responses": {
          "200": {
            "description": "Return the list of VAT rates",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VatRatesList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/reports/revenues": {
      "get": {
        "tags": [
          "Report"
        ],
        "summary": "Revenues report",
        "parameters": [
          {
            "name": "date_min",
            "in": "query",
            "description": "Filter revenue at or after date",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "2023-01-01"
            }
          },
          {
            "name": "date_max",
            "in": "query",
            "description": "Filter revenue at or before date",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "2023-01-31"
            }
          },
          {
            "name": "breakdown",
            "in": "query",
            "description": "Filter revenue at or before date",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "day",
                "month",
                "year"
              ]
            }
          },
          {
            "name": "X-Timezone",
            "in": "header",
            "description": "Set the time zone",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "Europe/Paris"
            }
          },
          {
            "name": "activity_id",
            "in": "query",
            "description": "Filter revenue by activity",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "fdsd2343fd234vgfds"
            }
          },
          {
            "name": "client_id",
            "in": "query",
            "description": "Filter revenue by client",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "fdsd2343fd234vgfds"
            }
          },
          {
            "name": "supplier_id",
            "in": "query",
            "description": "Filter revenue by supplier",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "fdsd2343fd234vgfds"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the figures of the selected period",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RevenueReport"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/reports/payments": {
      "get": {
        "tags": [
          "Report"
        ],
        "summary": "Revenues report",
        "parameters": [
          {
            "name": "date_min",
            "in": "query",
            "description": "Filter revenue at or after date",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "2023-01-01"
            }
          },
          {
            "name": "date_max",
            "in": "query",
            "description": "Filter revenue at or before date",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "2023-01-31"
            }
          },
          {
            "name": "breakdown",
            "in": "query",
            "description": "Filter revenue at or before date",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "day",
                "month",
                "year"
              ]
            }
          },
          {
            "name": "X-Timezone",
            "in": "header",
            "description": "Set the time zone",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "Europe/Paris"
            }
          },
          {
            "name": "activity_id",
            "in": "query",
            "description": "Filter revenue by activity",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "example": [
                "636945e14ce97a4c1c561885",
                "636945e14fds1231c561885"
              ],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "client_id",
            "in": "query",
            "description": "Filter revenue by client",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "array",
              "example": [
                "636945e14ce97a4c1c561885",
                "636945e14fds1231c561885"
              ],
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "supplier_id",
            "in": "query",
            "description": "Filter revenue by supplier",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "fdsd2343fd234vgfds"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the figures of the selected period",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RevenueReport"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/reports/micro/revenues": {
      "get": {
        "tags": [
          "Report"
        ],
        "summary": "Revenues for micro company",
        "parameters": [
          {
            "name": "date_min",
            "in": "query",
            "description": "Filter revenue at or after date",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "2023-01-01"
            }
          },
          {
            "name": "date_max",
            "in": "query",
            "description": "Filter revenue at or before date",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "2023-01-31"
            }
          },
          {
            "name": "X-Timezone",
            "in": "header",
            "description": "Set the time zone",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "Europe/Paris"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the revenue for Micro activies",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RevenueMicroReport"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/reports/micro/urssaf": {
      "get": {
        "tags": [
          "Report"
        ],
        "summary": "URSSAF statements for micro company",
        "parameters": [
          {
            "name": "year",
            "in": "query",
            "description": "Filter by year",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "integer",
              "example": 2013
            }
          },
          {
            "name": "X-Timezone",
            "in": "header",
            "description": "Set the time zone",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "Europe/Paris"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the URSSAF statement",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UrssafStatementList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/articles": {
      "get": {
        "tags": [
          "Article"
        ],
        "summary": "List all articles",
        "parameters": [
          {
            "name": "keyword",
            "in": "query",
            "description": "The keyword to search for",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The (zero-based) offset of the first item returned in the collection. In a zero-based offset 0 is a correct value.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of entries to return. If the value exceeds the maximum, then the maximum value will be used.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 250,
              "minimum": 1,
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort records by attributes",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the list of articles",
            "headers": {
              "X-Total-Count": {
                "description": "Total entries",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArticleList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Article"
        ],
        "summary": "Create an article",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ArticleBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Created invoice",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Article"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/articles/top": {
      "get": {
        "tags": [
          "Article"
        ],
        "summary": "List top articles",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of entries to return. If the value exceeds the maximum, then the maximum value will be used.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 250,
              "minimum": 1,
              "type": "integer",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the list of articles sorted by the number of time they have been billed, in descending order",
            "headers": {
              "X-Total-Count": {
                "description": "Total entries",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArticleTopList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/articles/bulk_delete": {
      "post": {
        "tags": [
          "Article"
        ],
        "summary": "Delete multiple articles",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkDelete"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "The articles were deleted successfully"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/articles/export": {
      "get": {
        "tags": [
          "Article"
        ],
        "summary": "Export articles",
        "responses": {
          "200": {
            "description": "Return the export file",
            "content": {
              "text/csv": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                },
                "examples": {
                  "sampleFile": {
                    "summary": "A sample file",
                    "externalValue": "https://file-examples.com/wp-content/uploads/2017/02/file_example_CSV_5000.csv"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/articles/import": {
      "post": {
        "tags": [
          "Article"
        ],
        "summary": "Import articles",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/articles_import_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "The articles were imported"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/articles/{id}": {
      "get": {
        "tags": [
          "Article"
        ],
        "summary": "Retrieve an article",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Article ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945f14ce97a4c1c561885"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return a single article",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Article"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Article"
        ],
        "summary": "Update an article",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Article ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945f14ce97a4c1c561885"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ArticleBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated article",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Article"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Article"
        ],
        "summary": "Delete an article",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Article ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945f14ce97a4c1c561885"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The article was deleted successfully"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Article"
        ],
        "summary": "Update an article (partial)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Article ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945f14ce97a4c1c561885"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/JSONPatchRequestAddReplaceTest"
                    },
                    {
                      "$ref": "#/components/schemas/JSONPatchRequestRemove"
                    },
                    {
                      "$ref": "#/components/schemas/JSONPatchRequestMoveCopy"
                    }
                  ]
                }
              },
              "examples": {
                "AddReplaceTest": {
                  "value": [
                    {
                      "op": "replace",
                      "path": "/manufacturer",
                      "value": "Google"
                    }
                  ]
                },
                "Remove": {
                  "value": [
                    {
                      "op": "remove",
                      "path": "/manufacturer"
                    }
                  ]
                },
                "MoveCopy": {
                  "value": [
                    {
                      "op": "copy",
                      "from": "/title",
                      "path": "/description"
                    }
                  ]
                }
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Article"
              },
              "example": {
                "payment_term": 3,
                "template": "london"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated article",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Article"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/documents": {
      "get": {
        "tags": [
          "Document"
        ],
        "summary": "List all documents",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "The (zero-based) offset of the first item returned in the collection. In a zero-based offset 0 is a correct value.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of entries to return. If the value exceeds the maximum, then the maximum value will be used.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 250,
              "minimum": 1,
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort records by attributes",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the list of documents",
            "headers": {
              "X-Total-Count": {
                "description": "Total entries",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Document"
        ],
        "summary": "Create an document",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Created document",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Document"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/documents/{id}": {
      "get": {
        "tags": [
          "Document"
        ],
        "summary": "Retrieve an document",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Document ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945f14ce97a4c1c561885"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return a single document",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Document"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Document"
        ],
        "summary": "Delete a document",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Document ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945f14ce97a4c1c561885"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The document was deleted successfully"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/activities": {
      "get": {
        "tags": [
          "Activity"
        ],
        "summary": "List all activities",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "The (zero-based) offset of the first item returned in the collection. In a zero-based offset 0 is a correct value.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of entries to return. If the value exceeds the maximum, then the maximum value will be used.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 250,
              "minimum": 1,
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort records by attributes",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the list of activities",
            "headers": {
              "X-Total-Count": {
                "description": "Total entries",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActivityList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Activity"
        ],
        "summary": "Create an activity",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Created activity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Activity"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/activities/preview": {
      "post": {
        "tags": [
          "Activity"
        ],
        "summary": "Preview the invoice PDF",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Return the PDF file",
            "content": {
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                },
                "examples": {
                  "sampleFile": {
                    "summary": "A sample file",
                    "externalValue": "https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/activities/{id}": {
      "get": {
        "tags": [
          "Activity"
        ],
        "summary": "Retrieve an activity",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Activity ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945f14ce97a4c1c561885"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return a single activity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Activity"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Activity"
        ],
        "summary": "Update an activity",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Activity ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945f14ce97a4c1c561885"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActivityBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated activity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Activity"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Activity"
        ],
        "summary": "Delete an activity",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Activity ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945f14ce97a4c1c561885"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The activity was deleted successfully"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Activity"
        ],
        "summary": "Update an activity (partial)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Activity ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945f14ce97a4c1c561885"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/JSONPatchRequestAddReplaceTest"
                    },
                    {
                      "$ref": "#/components/schemas/JSONPatchRequestRemove"
                    },
                    {
                      "$ref": "#/components/schemas/JSONPatchRequestMoveCopy"
                    }
                  ]
                }
              },
              "examples": {
                "AddReplaceTest": {
                  "value": [
                    {
                      "op": "replace",
                      "path": "/name",
                      "value": "My activity"
                    }
                  ]
                },
                "Remove": {
                  "value": [
                    {
                      "op": "remove",
                      "path": "/name"
                    }
                  ]
                },
                "MoveCopy": {
                  "value": [
                    {
                      "op": "copy",
                      "from": "/name",
                      "path": "/name"
                    }
                  ]
                }
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Activity"
              },
              "example": {
                "payment_term": 3,
                "template": "london"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated activity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Activity"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/activities/{id}/logo": {
      "post": {
        "tags": [
          "Activity"
        ],
        "summary": "Upload the logo",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Activity ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945f14ce97a4c1c561885"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/id_logo_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated activity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Activity"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Activity"
        ],
        "summary": "Delete the logo",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Activity ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945f14ce97a4c1c561885"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The logo was deleted successfully"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/activities/{id}/terms": {
      "post": {
        "tags": [
          "Activity"
        ],
        "summary": "Add a list of terms documents",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Activity ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/id_terms_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated activity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Activity"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/activities/{id}/terms/{termsIndex}": {
      "get": {
        "tags": [
          "Activity"
        ],
        "summary": "Download a terms file",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Activity ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          },
          {
            "name": "termsIndex",
            "in": "path",
            "description": "Terms index",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "example": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the terms file",
            "content": {
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                },
                "examples": {
                  "sampleFile": {
                    "summary": "A sample file",
                    "externalValue": "https://file-examples.com/storage/fe954b025e6370d449e6aa6/2017/10/file_example_PNG_500kB.png"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Activity"
        ],
        "summary": "Delete a terms document",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Activity ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          },
          {
            "name": "termsIndex",
            "in": "path",
            "description": "Terms index",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "example": 0
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The terms document was deleted successfully"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/activities/{id}/signature": {
      "get": {
        "tags": [
          "Activity"
        ],
        "summary": "Download a signature file",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Activity ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the signature file",
            "content": {
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                },
                "examples": {
                  "sampleFile": {
                    "summary": "A sample file",
                    "externalValue": "https://file-examples.com/storage/fe954b025e6370d449e6aa6/2017/10/file_example_PNG_500kB.png"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Activity"
        ],
        "summary": "Add a signature",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Activity ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/id_signature_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated activity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Activity"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Activity"
        ],
        "summary": "Delete a signature",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Activity ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The signature was deleted successfully"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/users/me": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Get current account",
        "responses": {
          "200": {
            "description": "Return the connected account",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Account"
        ],
        "summary": "Update current account",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated account",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Account"
        ],
        "summary": "Update current account (partial)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/JSONPatchRequestAddReplaceTest"
                    },
                    {
                      "$ref": "#/components/schemas/JSONPatchRequestRemove"
                    },
                    {
                      "$ref": "#/components/schemas/JSONPatchRequestMoveCopy"
                    }
                  ]
                }
              },
              "examples": {
                "AddReplaceTest": {
                  "value": [
                    {
                      "op": "replace",
                      "path": "/last_name",
                      "value": "Dupont"
                    }
                  ]
                },
                "Remove": {
                  "value": [
                    {
                      "op": "remove",
                      "path": "/last_name"
                    }
                  ]
                },
                "MoveCopy": {
                  "value": [
                    {
                      "op": "copy",
                      "from": "/last_name",
                      "path": "/last_name"
                    }
                  ]
                }
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/AccountBody"
              },
              "example": {
                "payment_term": 3,
                "template": "london"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated account",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/users/me/password": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Update password",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountPasswordBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Return the updated user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/users/me/subscription_portal": {
      "get": {
        "tags": [
          "Account"
        ],
        "summary": "Get subscription portal URL",
        "responses": {
          "200": {
            "description": "Return the subscription portal URL",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_1"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/users/me/delete": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Delete account",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/me_delete_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "The account deletion is requested"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/users/me/api_keys": {
      "post": {
        "tags": [
          "Account"
        ],
        "summary": "Create an API key",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountApiKeyBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Return the updated user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Account"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/users/me/api_keys/{keyIndex}": {
      "delete": {
        "tags": [
          "Account"
        ],
        "summary": "Delete an API key",
        "parameters": [
          {
            "name": "keyIndex",
            "in": "path",
            "description": "API key index",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "example": 0
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The API key was deleted successfully"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/companies/my": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "Get current company",
        "responses": {
          "200": {
            "description": "Return the connected company",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Company"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Company"
        ],
        "summary": "Update current company",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated company",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Company"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Company"
        ],
        "summary": "Update current company (partial)",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/JSONPatchRequestAddReplaceTest"
                    },
                    {
                      "$ref": "#/components/schemas/JSONPatchRequestRemove"
                    },
                    {
                      "$ref": "#/components/schemas/JSONPatchRequestMoveCopy"
                    }
                  ]
                }
              },
              "examples": {
                "AddReplaceTest": {
                  "value": [
                    {
                      "op": "replace",
                      "path": "/last_name",
                      "value": "Dupont"
                    }
                  ]
                },
                "Remove": {
                  "value": [
                    {
                      "op": "remove",
                      "path": "/last_name"
                    }
                  ]
                },
                "MoveCopy": {
                  "value": [
                    {
                      "op": "copy",
                      "from": "/last_name",
                      "path": "/last_name"
                    }
                  ]
                }
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/CompanyBody"
              },
              "example": {
                "payment_term": 3,
                "template": "london"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated company",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Company"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/banks": {
      "get": {
        "tags": [
          "Bank"
        ],
        "summary": "List banks",
        "parameters": [
          {
            "name": "keyword",
            "in": "query",
            "description": "The keyword to search for",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The (zero-based) offset of the first item returned in the collection. In a zero-based offset 0 is a correct value.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of entries to return. If the value exceeds the maximum, then the maximum value will be used.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 250,
              "minimum": 1,
              "type": "integer",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the list of banks",
            "headers": {
              "X-Total-Count": {
                "description": "Total entries",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankItemList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/banks/connect": {
      "get": {
        "tags": [
          "Bank"
        ],
        "summary": "Get URL to connect a new bank",
        "responses": {
          "200": {
            "description": "Return the connection URL",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_1"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/banks/{id}": {
      "get": {
        "tags": [
          "Bank"
        ],
        "summary": "Retrieve a bank item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Bank ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945f14ce97a4c1c561885"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return a single bank item",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankItem"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Bank"
        ],
        "summary": "Delete a bank item",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Bank ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945f14ce97a4c1c561885"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The bank item was deleted successfully"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/banks/{id}/reconnect": {
      "get": {
        "tags": [
          "Bank"
        ],
        "summary": "Get URL to reconnect a suspended bank",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Bank ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945f14ce97a4c1c561885"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the connection URL",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200_1"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/banks/{id}/refresh": {
      "get": {
        "tags": [
          "Bank"
        ],
        "summary": "Retrieve latest transactions",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Bank ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945f14ce97a4c1c561885"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the bank item",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankAccountList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/banks/{id}/transactions": {
      "get": {
        "tags": [
          "Bank"
        ],
        "summary": "List all transactions",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "The (zero-based) offset of the first item returned in the collection. In a zero-based offset 0 is a correct value.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of entries to return. If the value exceeds the maximum, then the maximum value will be used.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 250,
              "minimum": 1,
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort records by attributes",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "The keyword to search for",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date_min",
            "in": "query",
            "description": "Filter records created at or after date",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "2013-01-01"
            }
          },
          {
            "name": "date_max",
            "in": "query",
            "description": "Filter records created at or before date",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "2013-01-31"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Bank ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945f14ce97a4c1c561885"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter transactions by status",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "pending",
                "associated",
                "ignored"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the list of transactions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankTransactionList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/banks/{id}/transactions/{transactionId}/ignore": {
      "post": {
        "tags": [
          "Bank"
        ],
        "summary": "Ignore a transaction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Bank ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945f14ce97a4c1c561885"
            }
          },
          {
            "name": "transactionId",
            "in": "path",
            "description": "Transaction ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945f14ce97a4c1c561885"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the list of transactions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankTransactionList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/banks/{id}/transactions/{transactionId}/restore": {
      "post": {
        "tags": [
          "Bank"
        ],
        "summary": "Restore a transaction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Bank ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945f14ce97a4c1c561885"
            }
          },
          {
            "name": "transactionId",
            "in": "path",
            "description": "Transaction ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945f14ce97a4c1c561885"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the list of transactions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankTransactionList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/banks/{id}/accounts": {
      "get": {
        "tags": [
          "Bank"
        ],
        "summary": "List all accounts",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Bank ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945f14ce97a4c1c561885"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the list of accounts",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankAccountList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/banks/{id}/accounts/{accountId}/enable": {
      "post": {
        "tags": [
          "Bank"
        ],
        "summary": "Enable an account",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Bank ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945f14ce97a4c1c561885"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "Account ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "123456"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the list of accounts",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankAccountList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/banks/{id}/accounts/{accountId}/disable": {
      "post": {
        "tags": [
          "Bank"
        ],
        "summary": "Disable an account",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Bank ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945f14ce97a4c1c561885"
            }
          },
          {
            "name": "accountId",
            "in": "path",
            "description": "Account ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "123456"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the list of accounts",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankAccountList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/bank_rules": {
      "get": {
        "tags": [
          "Bank Rule"
        ],
        "summary": "List all bank rules",
        "parameters": [
          {
            "name": "keyword",
            "in": "query",
            "description": "The keyword to search for",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The (zero-based) offset of the first item returned in the collection. In a zero-based offset 0 is a correct value.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of entries to return. If the value exceeds the maximum, then the maximum value will be used.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 250,
              "minimum": 1,
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort records by attributes",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the list of bank rules",
            "headers": {
              "X-Total-Count": {
                "description": "Total entries",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankRuleList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Bank Rule"
        ],
        "summary": "Create a bank rule",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BankRuleBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Created invoice",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankRule"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/bank_rules/{id}/activate": {
      "post": {
        "tags": [
          "Bank Rule"
        ],
        "summary": "Activate a bank rule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Bank rule ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945f14ce97a4c1c561885"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Activated bank rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankRule"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/bank_rules/{id}/deactivate": {
      "post": {
        "tags": [
          "Bank Rule"
        ],
        "summary": "Deactivate a bank rule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Bank rule ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945f14ce97a4c1c561885"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deactivated bank rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankRule"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/bank_rules/{id}": {
      "get": {
        "tags": [
          "Bank Rule"
        ],
        "summary": "Retrieve a bank rule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Bank rule ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945f14ce97a4c1c561885"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return a single bank rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankRule"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Bank Rule"
        ],
        "summary": "Update a bank rule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Bank rule ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945f14ce97a4c1c561885"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BankRuleBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated bank rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankRule"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Bank Rule"
        ],
        "summary": "Delete a bank rule",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Bank rule ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945f14ce97a4c1c561885"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The bank rule was deleted successfully"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Bank Rule"
        ],
        "summary": "Update a bank rule (partial)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Bank rule ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945f14ce97a4c1c561885"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/JSONPatchRequestAddReplaceTest"
                    },
                    {
                      "$ref": "#/components/schemas/JSONPatchRequestRemove"
                    },
                    {
                      "$ref": "#/components/schemas/JSONPatchRequestMoveCopy"
                    }
                  ]
                }
              },
              "examples": {
                "AddReplaceTest": {
                  "value": [
                    {
                      "op": "replace",
                      "path": "/manufacturer",
                      "value": "Google"
                    }
                  ]
                },
                "Remove": {
                  "value": [
                    {
                      "op": "remove",
                      "path": "/manufacturer"
                    }
                  ]
                },
                "MoveCopy": {
                  "value": [
                    {
                      "op": "copy",
                      "from": "/title",
                      "path": "/description"
                    }
                  ]
                }
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/BankRule"
              },
              "example": {
                "payment_term": 3,
                "template": "london"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated bank rule",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankRule"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/clients": {
      "get": {
        "tags": [
          "Client"
        ],
        "summary": "List all clients",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "The (zero-based) offset of the first item returned in the collection. In a zero-based offset 0 is a correct value.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of entries to return. If the value exceeds the maximum, then the maximum value will be used.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 250,
              "minimum": 1,
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "The keyword to search for",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort records by attributes",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "country_code",
            "in": "query",
            "description": "Filter clients by country",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "FR"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Filter clients by type",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "individual",
                "company"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the list of clients",
            "headers": {
              "X-Total-Count": {
                "description": "Total entries",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Client"
        ],
        "summary": "Create a client",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Created client",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Client"
        ],
        "summary": "Delete multiple clients",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "The list of ids to delete",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885,632325e14fdss7a4c1c561111"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The clients were deleted successfully"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/clients/bulk_delete": {
      "post": {
        "tags": [
          "Client"
        ],
        "summary": "Delete multiple clients",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkDelete"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "The clients were deleted successfully"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/clients/export": {
      "get": {
        "tags": [
          "Client"
        ],
        "summary": "Export clients",
        "responses": {
          "200": {
            "description": "Return the export file",
            "content": {
              "text/csv": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                },
                "examples": {
                  "sampleFile": {
                    "summary": "A sample file",
                    "externalValue": "https://file-examples.com/wp-content/uploads/2017/02/file_example_CSV_5000.csv"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/clients/import": {
      "post": {
        "tags": [
          "Client"
        ],
        "summary": "Import clients",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/clients_import_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "The clients were imported"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/clients/top": {
      "get": {
        "tags": [
          "Client"
        ],
        "summary": "List top clients",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of entries to return. If the value exceeds the maximum, then the maximum value will be used.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 250,
              "minimum": 1,
              "type": "integer",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the list of clients sorted by the number of time they have been billed, in descending order",
            "headers": {
              "X-Total-Count": {
                "description": "Total entries",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientTopList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/clients/{id}/attachments": {
      "post": {
        "tags": [
          "Client"
        ],
        "summary": "Add a list of attachments",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Client ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/id_attachments_body_4"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated client",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/clients/{id}/attachments/{attachmentIndex}": {
      "get": {
        "tags": [
          "Client"
        ],
        "summary": "Download an attachment file",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Client ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          },
          {
            "name": "attachmentIndex",
            "in": "path",
            "description": "Attachment index",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "example": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the attachment file",
            "content": {
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                },
                "examples": {
                  "sampleFile": {
                    "summary": "A sample file",
                    "externalValue": "https://file-examples.com/storage/fe954b025e6370d449e6aa6/2017/10/file_example_PNG_500kB.png"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Client"
        ],
        "summary": "Delete an attachment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Client ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          },
          {
            "name": "attachmentIndex",
            "in": "path",
            "description": "Attachment index",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "example": 0
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The attachment was deleted successfully"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/clients/{id}/additional_notes": {
      "post": {
        "tags": [
          "Client"
        ],
        "summary": "Add a note",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Client ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdditionalNoteBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated client",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/clients/{id}/additional_notes/{noteIndex}": {
      "put": {
        "tags": [
          "Client"
        ],
        "summary": "Update a note",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Client ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          },
          {
            "name": "noteIndex",
            "in": "path",
            "description": "Note index",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "example": 0
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdditionalNoteBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated client",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Client"
        ],
        "summary": "Delete a note",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Client ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          },
          {
            "name": "noteIndex",
            "in": "path",
            "description": "Note index",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "example": 0
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The note was deleted successfully"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/clients/{id}": {
      "get": {
        "tags": [
          "Client"
        ],
        "summary": "Retrieve a client",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Client ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945f14ce97a4c1c561885"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return a single client",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Client"
        ],
        "summary": "Update a client",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Client ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945f14ce97a4c1c561885"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated client",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Client"
        ],
        "summary": "Delete a client",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Client ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945f14ce97a4c1c561885"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The client was deleted successfully"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Client"
        ],
        "summary": "Update a client (partial)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Client ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945f14ce97a4c1c561885"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/JSONPatchRequestAddReplaceTest"
                    },
                    {
                      "$ref": "#/components/schemas/JSONPatchRequestRemove"
                    },
                    {
                      "$ref": "#/components/schemas/JSONPatchRequestMoveCopy"
                    }
                  ]
                }
              },
              "examples": {
                "AddReplaceTest": {
                  "value": [
                    {
                      "op": "replace",
                      "path": "/last_name",
                      "value": "Dupont"
                    }
                  ]
                },
                "Remove": {
                  "value": [
                    {
                      "op": "remove",
                      "path": "/address_supplement"
                    }
                  ]
                },
                "MoveCopy": {
                  "value": [
                    {
                      "op": "copy",
                      "from": "/address",
                      "path": "/address_supplement"
                    }
                  ]
                }
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Client"
              },
              "example": {
                "payment_term": 3,
                "template": "london"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated client",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/suppliers": {
      "get": {
        "tags": [
          "Supplier"
        ],
        "summary": "List all suppliers",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "The (zero-based) offset of the first item returned in the collection. In a zero-based offset 0 is a correct value.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of entries to return. If the value exceeds the maximum, then the maximum value will be used.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 250,
              "minimum": 1,
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "The keyword to search for",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort records by attributes",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the list of suppliers",
            "headers": {
              "X-Total-Count": {
                "description": "Total entries",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SupplierList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Supplier"
        ],
        "summary": "Create a supplier",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Created client",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Supplier"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Supplier"
        ],
        "summary": "Delete multiple suppliers",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "The list of ids to delete",
            "required": true,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885,632325e14fdss7a4c1c561111"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The suppliers were deleted successfully"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/suppliers/top": {
      "get": {
        "tags": [
          "Supplier"
        ],
        "summary": "List top suppliers",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of entries to return. If the value exceeds the maximum, then the maximum value will be used.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 250,
              "minimum": 1,
              "type": "integer",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the list of suppliers sorted by the number of time they have been billed, in descending order",
            "headers": {
              "X-Total-Count": {
                "description": "Total entries",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SupplierTopList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/suppliers/bulk_delete": {
      "post": {
        "tags": [
          "Supplier"
        ],
        "summary": "Delete multiple suppliers",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkDelete"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "The suppliers were deleted successfully"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/suppliers/{id}/attachments": {
      "post": {
        "tags": [
          "Supplier"
        ],
        "summary": "Add a list of attachments",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Supplier ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/id_attachments_body_5"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated supplier",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Supplier"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/suppliers/{id}/attachments/{attachmentIndex}": {
      "get": {
        "tags": [
          "Supplier"
        ],
        "summary": "Download an attachment file",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Supplier ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          },
          {
            "name": "attachmentIndex",
            "in": "path",
            "description": "Attachment index",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "example": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the attachment file",
            "content": {
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                },
                "examples": {
                  "sampleFile": {
                    "summary": "A sample file",
                    "externalValue": "https://file-examples.com/storage/fe954b025e6370d449e6aa6/2017/10/file_example_PNG_500kB.png"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Supplier"
        ],
        "summary": "Delete an attachment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Supplier ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          },
          {
            "name": "attachmentIndex",
            "in": "path",
            "description": "Attachment index",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "example": 0
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The attachment was deleted successfully"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/suppliers/{id}/additional_notes": {
      "post": {
        "tags": [
          "Supplier"
        ],
        "summary": "Add a note",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Supplier ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdditionalNoteBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated supplier",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Supplier"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/suppliers/{id}/additional_notes/{noteIndex}": {
      "put": {
        "tags": [
          "Supplier"
        ],
        "summary": "Update a note",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Supplier ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          },
          {
            "name": "noteIndex",
            "in": "path",
            "description": "Note index",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "example": 0
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AdditionalNoteBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated supplier",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Supplier"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Supplier"
        ],
        "summary": "Delete a note",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Supplier ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          },
          {
            "name": "noteIndex",
            "in": "path",
            "description": "Note index",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "example": 0
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The note was deleted successfully"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/suppliers/{id}": {
      "get": {
        "tags": [
          "Supplier"
        ],
        "summary": "Retrieve a supplier",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Client ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945f14ce97a4c1c561885"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return a single supplier",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Supplier"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Supplier"
        ],
        "summary": "Update a supplier",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Client ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945f14ce97a4c1c561885"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SupplierBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated supplier",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Supplier"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Supplier"
        ],
        "summary": "Delete a supplier",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Client ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945f14ce97a4c1c561885"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The supplier was deleted successfully"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Supplier"
        ],
        "summary": "Update a supplier (partial)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Client ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945f14ce97a4c1c561885"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/JSONPatchRequestAddReplaceTest"
                    },
                    {
                      "$ref": "#/components/schemas/JSONPatchRequestRemove"
                    },
                    {
                      "$ref": "#/components/schemas/JSONPatchRequestMoveCopy"
                    }
                  ]
                }
              },
              "examples": {
                "AddReplaceTest": {
                  "value": [
                    {
                      "op": "replace",
                      "path": "/last_name",
                      "value": "Dupont"
                    }
                  ]
                },
                "Remove": {
                  "value": [
                    {
                      "op": "remove",
                      "path": "/address_supplement"
                    }
                  ]
                },
                "MoveCopy": {
                  "value": [
                    {
                      "op": "copy",
                      "from": "/address",
                      "path": "/address_supplement"
                    }
                  ]
                }
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Client"
              },
              "example": {
                "payment_term": 3,
                "template": "london"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated supplier",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Supplier"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/expenses": {
      "get": {
        "tags": [
          "Expense"
        ],
        "summary": "List all expenses",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "The (zero-based) offset of the first item returned in the collection. In a zero-based offset 0 is a correct value.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of entries to return. If the value exceeds the maximum, then the maximum value will be used.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 250,
              "minimum": 1,
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "The keyword to search for",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date_min",
            "in": "query",
            "description": "Filter records created at or after date",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "2013-01-01"
            }
          },
          {
            "name": "date_max",
            "in": "query",
            "description": "Filter records created at or before date",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "2013-01-31"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort records by attributes",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "activity_id",
            "in": "query",
            "description": "Filter records by activity",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "5d5eca258126ab647499f9bf"
            }
          },
          {
            "name": "supplier_id",
            "in": "query",
            "description": "Filter expenses by supplier",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "5d5eca258126ab647499f9bf"
            }
          },
          {
            "name": "with_attachment",
            "in": "query",
            "description": "Filter expenses with attachment",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "bank_transaction_id",
            "in": "query",
            "description": "Filter payments by bank transaction",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the list of expenses",
            "headers": {
              "X-Total-Count": {
                "description": "Total entries",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Expense"
        ],
        "summary": "Create an expense",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExpenseBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Created expense",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Expense"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/expenses/bulk_delete": {
      "post": {
        "tags": [
          "Expense"
        ],
        "summary": "Delete multiple expenses",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkDelete"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "The expenses were deleted successfully"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/expenses/export": {
      "post": {
        "tags": [
          "Expense"
        ],
        "summary": "Export expenses",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExpenseExportBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Return the number of exported expenses",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/expenses/{id}": {
      "get": {
        "tags": [
          "Expense"
        ],
        "summary": "Retrieve an expense",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Expense ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945f14ce97a4c1c561885"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return a single expense",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Expense"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Expense"
        ],
        "summary": "Update an expense",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Expense ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945f14ce97a4c1c561885"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExpenseBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated expense",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Expense"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Expense"
        ],
        "summary": "Delete an expense",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Expense ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945f14ce97a4c1c561885"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The expense was deleted successfully"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Expense"
        ],
        "summary": "Update an expense (partial)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Expense ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945f14ce97a4c1c561885"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/JSONPatchRequestAddReplaceTest"
                    },
                    {
                      "$ref": "#/components/schemas/JSONPatchRequestRemove"
                    },
                    {
                      "$ref": "#/components/schemas/JSONPatchRequestMoveCopy"
                    }
                  ]
                }
              },
              "examples": {
                "AddReplaceTest": {
                  "value": [
                    {
                      "op": "replace",
                      "path": "/label",
                      "value": "Other subscription"
                    }
                  ]
                },
                "Remove": {
                  "value": [
                    {
                      "op": "remove",
                      "path": "/label"
                    }
                  ]
                },
                "MoveCopy": {
                  "value": [
                    {
                      "op": "copy",
                      "from": "/last_name",
                      "path": "/first_name"
                    }
                  ]
                }
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Expense"
              },
              "example": {
                "payment_term": 3,
                "template": "london"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated expense",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Expense"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/expenses/{id}/attachments": {
      "post": {
        "tags": [
          "Expense"
        ],
        "summary": "Add a list of attachments",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Expense ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/id_attachments_body_6"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated expense",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Expense"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/expenses/{id}/attachments/{attachmentIndex}": {
      "get": {
        "tags": [
          "Expense"
        ],
        "summary": "Download an attachment file",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Expense ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          },
          {
            "name": "attachmentIndex",
            "in": "path",
            "description": "Attachment index",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "example": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the attachment file",
            "content": {
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                },
                "examples": {
                  "sampleFile": {
                    "summary": "A sample file",
                    "externalValue": "https://file-examples.com/storage/fe954b025e6370d449e6aa6/2017/10/file_example_PNG_500kB.png"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Expense"
        ],
        "summary": "Delete an attachment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Expense ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          },
          {
            "name": "attachmentIndex",
            "in": "path",
            "description": "Attachment index",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "example": 0
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The attachment was deleted successfully"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/expenses/types": {
      "get": {
        "tags": [
          "Expense"
        ],
        "summary": "List of expense types",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "The (zero-based) offset of the first item returned in the collection. In a zero-based offset 0 is a correct value.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of entries to return. If the value exceeds the maximum, then the maximum value will be used.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 250,
              "minimum": 1,
              "type": "integer",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the list of expense types",
            "headers": {
              "X-Total-Count": {
                "description": "Total entries",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseTypesList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Expense"
        ],
        "summary": "Create an expense type",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExpenseTypeBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Created expense",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseType"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/expenses/types/{id}": {
      "put": {
        "tags": [
          "Expense"
        ],
        "summary": "Update an expense type",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Expense type ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945f14ce97a4c1c561885"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExpenseTypeBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated expense",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenseType"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Expense"
        ],
        "summary": "Delete an expense type",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Expense type ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945f14ce97a4c1c561885"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The expense type was deleted successfully"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/recurring_expenses": {
      "get": {
        "tags": [
          "Recurring Expense"
        ],
        "summary": "List all recurring expenses",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "The (zero-based) offset of the first item returned in the collection. In a zero-based offset 0 is a correct value.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of entries to return. If the value exceeds the maximum, then the maximum value will be used.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 250,
              "minimum": 1,
              "type": "integer",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the list of recurring expenses",
            "headers": {
              "X-Total-Count": {
                "description": "Total entries",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecurringExpenseList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Recurring Expense"
        ],
        "summary": "Create an recurring expense",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecurringExpenseBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Created recurring expense",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecurringExpense"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/recurring_expenses/{id}/activate": {
      "post": {
        "tags": [
          "Recurring Expense"
        ],
        "summary": "Activate a recurring expense",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Recurring expense ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Activated recurring expense",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecurringExpense"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/recurring_expenses/{id}/deactivate": {
      "post": {
        "tags": [
          "Recurring Expense"
        ],
        "summary": "Deactivate a recurring expense",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Recurring expense ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deactivated recurring expense",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecurringExpense"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/recurring_expenses/{id}": {
      "get": {
        "tags": [
          "Recurring Expense"
        ],
        "summary": "Retrieve an recurring expense",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Recurring Expense ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945f14ce97a4c1c561885"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return a single recurring expense",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecurringExpense"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Recurring Expense"
        ],
        "summary": "Update a recurring expense",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Recurring Expense ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945f14ce97a4c1c561885"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecurringExpenseBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated recurring expense",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecurringExpense"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Recurring Expense"
        ],
        "summary": "Delete an recurring expense",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Recurring Expense ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945f14ce97a4c1c561885"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The recurring expense was deleted successfully"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Recurring Expense"
        ],
        "summary": "Update an expense (partial)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Recurring Expense ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945f14ce97a4c1c561885"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/JSONPatchRequestAddReplaceTest"
                    },
                    {
                      "$ref": "#/components/schemas/JSONPatchRequestRemove"
                    },
                    {
                      "$ref": "#/components/schemas/JSONPatchRequestMoveCopy"
                    }
                  ]
                }
              },
              "examples": {
                "AddReplaceTest": {
                  "value": [
                    {
                      "op": "replace",
                      "path": "/label",
                      "value": "Other subscription"
                    }
                  ]
                },
                "Remove": {
                  "value": [
                    {
                      "op": "remove",
                      "path": "/label"
                    }
                  ]
                },
                "MoveCopy": {
                  "value": [
                    {
                      "op": "copy",
                      "from": "/last_name",
                      "path": "/first_name"
                    }
                  ]
                }
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/RecurringExpense"
              },
              "example": {
                "payment_term": 3,
                "template": "london"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated recurring expense",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecurringExpense"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/payments": {
      "get": {
        "tags": [
          "Payment"
        ],
        "summary": "List all payments",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "The (zero-based) offset of the first item returned in the collection. In a zero-based offset 0 is a correct value.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of entries to return. If the value exceeds the maximum, then the maximum value will be used.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 250,
              "minimum": 1,
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort records by attributes",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "The keyword to search for",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date_min",
            "in": "query",
            "description": "Filter records created at or after date",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "2013-01-01"
            }
          },
          {
            "name": "date_max",
            "in": "query",
            "description": "Filter records created at or before date",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "2013-01-31"
            }
          },
          {
            "name": "activity_id",
            "in": "query",
            "description": "Filter records by activity",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "5d5eca258126ab647499f9bf"
            }
          },
          {
            "name": "client_id",
            "in": "query",
            "description": "Filter payments by client",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "5d5eca258126ab647499f9bf"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Filter payments by type",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "enum": [
                "payment",
                "refund"
              ]
            }
          },
          {
            "name": "bank_transaction_id",
            "in": "query",
            "description": "Filter payments by bank transaction",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the list of payments",
            "headers": {
              "X-Total-Count": {
                "description": "Total entries",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Payment"
        ],
        "summary": "Create an external payment",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExternalPaymentBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Created invoice",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/payments/bulk_delete": {
      "post": {
        "tags": [
          "Payment"
        ],
        "summary": "Delete multiple payments",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BulkDelete"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "The payments were deleted successfully"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/payments/export": {
      "post": {
        "tags": [
          "Payment"
        ],
        "summary": "Export payments",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentExportBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Return the number of exported payments",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/payments/import": {
      "post": {
        "tags": [
          "Payment"
        ],
        "summary": "Import payments",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/payments_import_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "The invoices were imported"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/payments/{id}": {
      "get": {
        "tags": [
          "Payment"
        ],
        "summary": "Retrieve a payment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Payment ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945f14ce97a4c1c561885"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return a single payment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Payment"
        ],
        "summary": "Update a payment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Payment ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945f14ce97a4c1c561885"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated payment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Payment"
        ],
        "summary": "Delete a payment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Payment ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945f14ce97a4c1c561885"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The payment was deleted successfully"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Payment"
        ],
        "summary": "Update a payment (partial)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Payment ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945f14ce97a4c1c561885"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "type": "array",
                "items": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/JSONPatchRequestAddReplaceTest"
                    },
                    {
                      "$ref": "#/components/schemas/JSONPatchRequestRemove"
                    },
                    {
                      "$ref": "#/components/schemas/JSONPatchRequestMoveCopy"
                    }
                  ]
                }
              },
              "examples": {
                "AddReplaceTest": {
                  "value": [
                    {
                      "op": "replace",
                      "path": "/label",
                      "value": "Other subscription"
                    }
                  ]
                },
                "Remove": {
                  "value": [
                    {
                      "op": "remove",
                      "path": "/label"
                    }
                  ]
                },
                "MoveCopy": {
                  "value": [
                    {
                      "op": "copy",
                      "from": "/last_name",
                      "path": "/first_name"
                    }
                  ]
                }
              }
            },
            "application/merge-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/Payment"
              },
              "example": {
                "payment_term": 3,
                "template": "london"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated article",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/payments/{id}/attachments": {
      "post": {
        "tags": [
          "Payment"
        ],
        "summary": "Add a list of attachments",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Payment ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/id_attachments_body_7"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Updated expense",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/payments/{id}/attachments/{attachmentIndex}": {
      "get": {
        "tags": [
          "Payment"
        ],
        "summary": "Download an attachment file",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Payment ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          },
          {
            "name": "attachmentIndex",
            "in": "path",
            "description": "Attachment index",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "example": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the attachment file",
            "content": {
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                },
                "examples": {
                  "sampleFile": {
                    "summary": "A sample file",
                    "externalValue": "https://file-examples.com/storage/fe954b025e6370d449e6aa6/2017/10/file_example_PNG_500kB.png"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Payment"
        ],
        "summary": "Delete an attachment",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Payment ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string",
              "example": "636945e14ce97a4c1c561885"
            }
          },
          {
            "name": "attachmentIndex",
            "in": "path",
            "description": "Attachment index",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "example": 0
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The attachment was deleted successfully"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    },
    "/integrations": {
      "get": {
        "tags": [
          "Integration"
        ],
        "summary": "List all integrated services",
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "description": "The (zero-based) offset of the first item returned in the collection. In a zero-based offset 0 is a correct value.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of entries to return. If the value exceeds the maximum, then the maximum value will be used.",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "maximum": 250,
              "minimum": 1,
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "category",
            "in": "query",
            "description": "Filter integrated services by their category",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string",
              "example": "payment_gateway"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the list of integrations",
            "headers": {
              "X-Total-Count": {
                "description": "Total entries",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "integer"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IntegrationList"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "The specified resource was not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 404,
                  "message": "Resource not found"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 500,
                  "message": "Internal server error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Error": {
        "required": [
          "code",
          "message"
        ],
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "The error message indicating what the issue is"
          },
          "code": {
            "type": "integer",
            "description": "The http status code"
          }
        }
      },
      "JSONPatchRequestAddReplaceTest": {
        "required": [
          "op",
          "path",
          "value"
        ],
        "type": "object",
        "properties": {
          "path": {
            "type": "string",
            "description": "A JSON Pointer path."
          },
          "value": {
            "description": "The value to add, replace or test."
          }
        },
        "additionalProperties": false
      },
      "JSONPatchRequestRemove": {
        "required": [
          "op",
          "path"
        ],
        "type": "object",
        "properties": {
          "path": {
            "type": "string",
            "description": "A JSON Pointer path."
          },
          "op": {
            "type": "string",
            "description": "The operation to perform.",
            "enum": [
              "remove"
            ]
          }
        },
        "additionalProperties": false
      },
      "JSONPatchRequestMoveCopy": {
        "required": [
          "from",
          "op",
          "path"
        ],
        "type": "object",
        "properties": {
          "path": {
            "type": "string",
            "description": "A JSON Pointer path."
          },
          "op": {
            "type": "string",
            "description": "The operation to perform.",
            "enum": [
              "move",
              "copy"
            ]
          }
        },
        "additionalProperties": false
      },
      "ArticleBody": {
        "type": "object",
        "properties": {
          "manufacturer": {
            "type": "string",
            "example": "Apple"
          },
          "origin_country_code": {
            "type": "string",
            "example": "FR"
          },
          "price": {
            "type": "string",
            "example": "10.32"
          },
          "purchase_price": {
            "type": "string",
            "example": "10.32"
          },
          "eco_contribution": {
            "type": "string",
            "example": "10.32"
          },
          "sku": {
            "type": "string",
            "example": "AZ123"
          },
          "title": {
            "type": "string",
            "example": "Shirt"
          },
          "description": {
            "type": "string",
            "example": "Size M"
          },
          "tax_rate": {
            "type": "string",
            "example": "20.00"
          },
          "type": {
            "type": "string",
            "enum": [
              "goods",
              "services",
              "other_services",
              "disbursement_fees"
            ]
          },
          "taxes_included": {
            "type": "boolean"
          },
          "second_hand_good": {
            "type": "boolean"
          }
        }
      },
      "BankRuleBody": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "SFR"
          },
          "enabled": {
            "type": "boolean"
          },
          "type": {
            "type": "string",
            "enum": [
              "income",
              "expense"
            ]
          },
          "restricted_bank_ids": {
            "type": "array",
            "example": [
              "5d5efds258126ab647499f9bf",
              "5d5effd34gf126ab647499f9bf"
            ],
            "items": {
              "type": "string"
            }
          },
          "all_conditions_matching": {
            "type": "boolean"
          },
          "conditions": {
            "type": "array",
            "example": [
              {
                "type": "description",
                "operator": "contain",
                "value": "SFR"
              },
              {
                "type": "amount",
                "operator": "equal",
                "value": "12.32"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/BankRuleCondition"
            }
          },
          "action": {
            "$ref": "#/components/schemas/BankRuleAction"
          }
        }
      },
      "BankRuleAction": {
        "type": "object",
        "properties": {
          "to_ignore": {
            "type": "boolean"
          },
          "expense": {
            "$ref": "#/components/schemas/ExpenseBankRuleAction"
          },
          "payment": {
            "$ref": "#/components/schemas/PaymentBankRuleAction"
          }
        }
      },
      "ExpenseBankRuleAction": {
        "type": "object",
        "properties": {
          "method": {
            "type": "string",
            "enum": [
              "bank_transfert",
              "cash",
              "check",
              "cesu",
              "direct_debit",
              "credit_card",
              "other",
              "paypal"
            ]
          },
          "activity_id": {
            "type": "string",
            "example": "5d5efds258126ab647499f9bf"
          },
          "supplier_id": {
            "type": "string",
            "example": "5d5efds258126ab647499f9bf"
          },
          "label": {
            "type": "string",
            "example": "Mobile subscription"
          },
          "tax_rate": {
            "type": "string",
            "example": "12.45"
          },
          "type_id": {
            "type": "string",
            "example": "Mobile subscription"
          }
        }
      },
      "PaymentBankRuleAction": {
        "type": "object",
        "properties": {
          "method": {
            "type": "string",
            "enum": [
              "bank_transfert",
              "cash",
              "check",
              "cesu",
              "direct_debit",
              "credit_card",
              "other",
              "paypal"
            ]
          },
          "activity_id": {
            "type": "string",
            "example": "5d5efds258126ab647499f9bf"
          },
          "client_id": {
            "type": "string",
            "example": "5d5efds258126ab647499f9bf"
          },
          "label": {
            "type": "string",
            "example": "Mobile subscription"
          },
          "tax_rate": {
            "type": "string",
            "example": "12.45"
          },
          "taxes_liable": {
            "type": "boolean"
          },
          "item": {
            "$ref": "#/components/schemas/PaymentBankRuleActionItem"
          }
        }
      },
      "PaymentBankRuleActionItem": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "Mobile subscription"
          },
          "tax_rate": {
            "type": "string",
            "example": "12.45"
          },
          "type": {
            "type": "string",
            "enum": [
              "goods",
              "services",
              "other_services",
              "disbursement_fees"
            ]
          },
          "origin_country_code": {
            "type": "string",
            "example": "FR"
          },
          "second_hand_good": {
            "type": "boolean"
          }
        }
      },
      "BankRuleCondition": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "description",
              "amount"
            ]
          },
          "operator": {
            "type": "string",
            "enum": [
              "contain",
              "not_contain",
              "equal",
              "not_equal",
              "greater_than",
              "less_than"
            ]
          },
          "value": {
            "type": "string",
            "example": "SFR"
          }
        }
      },
      "Article": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CollectionId"
          },
          {
            "$ref": "#/components/schemas/ArticleBody"
          }
        ]
      },
      "BankRule": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CollectionId"
          },
          {
            "$ref": "#/components/schemas/BankRuleBody"
          }
        ]
      },
      "Currency": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "example": "EUR"
          },
          "symbol": {
            "type": "string",
            "example": "€"
          },
          "labels": {
            "$ref": "#/components/schemas/Currency_labels"
          }
        }
      },
      "ExpenseType": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CollectionId"
          },
          {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "Internet"
              }
            }
          }
        ]
      },
      "VatRate": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "example": "FR"
          },
          "standard_rate": {
            "type": "string",
            "example": "20.00"
          },
          "reduced_rates": {
            "type": "array",
            "example": [
              "13.00",
              "10.00",
              "0.00"
            ],
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Country": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "example": "FR"
          },
          "eu_member": {
            "type": "boolean"
          },
          "labels": {
            "$ref": "#/components/schemas/Country_labels"
          }
        }
      },
      "Integration": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CollectionId"
          },
          {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "example": "Compte Paypal"
              },
              "type": {
                "type": "string",
                "example": "paypal"
              },
              "category": {
                "type": "string",
                "example": "payment_gateway"
              }
            }
          }
        ]
      },
      "UrssafReportStatement": {
        "type": "object",
        "properties": {
          "period_type": {
            "type": "string",
            "enum": [
              "month",
              "quarter"
            ]
          },
          "period_index": {
            "type": "integer",
            "example": 1
          },
          "period_start": {
            "type": "string",
            "example": "2023-01-01"
          },
          "period_end": {
            "type": "string",
            "example": "2023-31-01"
          },
          "year": {
            "type": "integer",
            "example": 2013
          },
          "status": {
            "type": "string",
            "enum": [
              "opened",
              "closed"
            ]
          },
          "due_date": {
            "type": "string",
            "example": "2023-02-28"
          },
          "goods_amount": {
            "type": "string",
            "example": "1235.00"
          },
          "services_amount": {
            "type": "string",
            "example": "554.00"
          },
          "other_services_amount": {
            "type": "string",
            "example": "787.00"
          },
          "estimate": {
            "type": "string",
            "example": "457.00"
          }
        }
      },
      "FiguresReportTotal": {
        "type": "object",
        "properties": {
          "margin": {
            "type": "string",
            "example": "32483.00"
          },
          "incomes": {
            "type": "string",
            "example": "6013.00"
          },
          "expenses": {
            "type": "string",
            "example": "214.00"
          },
          "variation": {
            "type": "string",
            "example": "10.30"
          }
        }
      },
      "RevenueReport": {
        "type": "object",
        "properties": {
          "summary": {
            "$ref": "#/components/schemas/FiguresReportTotal"
          },
          "segments": {
            "type": "array",
            "example": [
              {
                "margin": -393,
                "incomes": 456,
                "expenses": 849
              },
              {
                "margin": 4507,
                "incomes": 4556,
                "expenses": 49
              }
            ],
            "items": {
              "$ref": "#/components/schemas/RevenueReportSegment"
            }
          }
        }
      },
      "RevenueReportSegment": {
        "type": "object",
        "properties": {
          "margin": {
            "type": "string"
          },
          "incomes": {
            "type": "string"
          },
          "expenses": {
            "type": "string"
          }
        }
      },
      "ClientFiguresReportTotal": {
        "type": "object",
        "properties": {
          "incomes": {
            "type": "string",
            "example": "6013.00"
          }
        }
      },
      "ClientRevenueReport": {
        "type": "object",
        "properties": {
          "summary": {
            "$ref": "#/components/schemas/ClientFiguresReportTotal"
          },
          "segments": {
            "type": "array",
            "example": [
              {
                "incomes": -393
              },
              {
                "incomes": 4507
              }
            ],
            "items": {
              "$ref": "#/components/schemas/ClientRevenueReportSegment"
            }
          }
        }
      },
      "ClientRevenueReportSegment": {
        "type": "object",
        "properties": {
          "incomes": {
            "type": "string"
          }
        }
      },
      "SupplierFiguresReportTotal": {
        "type": "object",
        "properties": {
          "expenses": {
            "type": "string",
            "example": "6013.00"
          }
        }
      },
      "SupplierRevenueReport": {
        "type": "object",
        "properties": {
          "summary": {
            "$ref": "#/components/schemas/SupplierFiguresReportTotal"
          },
          "segments": {
            "type": "array",
            "example": [
              {
                "expenses": -393
              },
              {
                "expenses": 4507
              }
            ],
            "items": {
              "$ref": "#/components/schemas/SupplierRevenueReportSegment"
            }
          }
        }
      },
      "SupplierRevenueReportSegment": {
        "type": "object",
        "properties": {
          "expenses": {
            "type": "string"
          }
        }
      },
      "MicroReportActivity": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "string"
          },
          "low_vat_threshold": {
            "type": "string"
          },
          "high_vat_threshold": {
            "type": "string"
          },
          "micro_threshold": {
            "type": "string"
          }
        }
      },
      "RevenueMicroReport": {
        "type": "object",
        "properties": {
          "goods": {
            "$ref": "#/components/schemas/MicroReportActivity"
          },
          "services": {
            "$ref": "#/components/schemas/MicroReportActivity"
          },
          "other_services": {
            "$ref": "#/components/schemas/MicroReportActivity"
          }
        },
        "example": {
          "goods": {
            "amount": 1234,
            "low_vat_threshold": 40121,
            "high_vat_threshold": 45121,
            "micro_threshold": 98451
          },
          "services": {
            "amount": 213,
            "low_vat_threshold": 10234,
            "high_vat_threshold": 12000,
            "micro_threshold": 35120
          },
          "other_services": {
            "amount": 23,
            "low_vat_threshold": 10234,
            "high_vat_threshold": 12000,
            "micro_threshold": 35120
          }
        }
      },
      "Activity": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CollectionId"
          },
          {
            "$ref": "#/components/schemas/ActivityBody"
          },
          {
            "type": "object",
            "properties": {
              "default": {
                "type": "boolean"
              },
              "logo": {
                "type": "string",
                "example": "logo-company-123456789.png"
              },
              "signature": {
                "type": "string",
                "example": "signature-123456789.png"
              },
              "terms_documents": {
                "type": "array",
                "example": [
                  "myfile1.png",
                  "mydocument.pdf"
                ],
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ]
      },
      "ActivityBody": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "My activity"
          },
          "trade_name": {
            "type": "string",
            "example": "My company"
          },
          "email": {
            "type": "string",
            "example": "john@gmail.com"
          },
          "phone": {
            "type": "string",
            "example": "0832423232"
          },
          "mobile": {
            "type": "string",
            "example": "0832423232"
          },
          "website": {
            "type": "string",
            "example": "https://www.google.fr"
          },
          "comment": {
            "type": "string",
            "example": "This is my comment"
          },
          "late_penalty_rate": {
            "type": "string",
            "example": "10.00"
          },
          "rebate_rate": {
            "type": "string",
            "example": "0.00"
          },
          "iban": {
            "type": "string",
            "example": "FR3232434343"
          },
          "bic": {
            "type": "string",
            "example": "BBGXXX"
          },
          "bank_name": {
            "type": "string",
            "example": "SG"
          },
          "paypal_email": {
            "type": "string",
            "example": "john@gmail.com"
          },
          "template_name": {
            "type": "string",
            "example": "paris"
          },
          "template_color": {
            "type": "string",
            "example": "#324354"
          },
          "payment_methods": {
            "type": "array",
            "example": [
              "cash",
              "credit_card"
            ],
            "items": {
              "type": "string",
              "enum": [
                "bank_transfert",
                "cash",
                "check",
                "cesu",
                "direct_debit",
                "credit_card",
                "other",
                "paypal"
              ]
            }
          },
          "payment_term": {
            "type": "string",
            "enum": [
              "upon_invoice",
              "upon_order",
              "upon_15_net",
              "upon_30_net",
              "upon_45_net",
              "upon_60_net",
              "upon_30_end",
              "upon_45_end",
              "upon_30_end_offset_10",
              "upon_30_end_offset_20"
            ]
          },
          "emails_configuration": {
            "$ref": "#/components/schemas/ActivityBody_emails_configuration"
          }
        }
      },
      "EmailConfigurationContent": {
        "type": "object",
        "properties": {
          "fr": {
            "$ref": "#/components/schemas/EmailConfigurationContent_fr"
          },
          "en": {
            "$ref": "#/components/schemas/EmailConfigurationContent_fr"
          },
          "de": {
            "$ref": "#/components/schemas/EmailConfigurationContent_fr"
          },
          "it": {
            "$ref": "#/components/schemas/EmailConfigurationContent_fr"
          },
          "es": {
            "$ref": "#/components/schemas/EmailConfigurationContent_fr"
          }
        }
      },
      "EmailConfigurationFooter": {
        "type": "object",
        "properties": {
          "fr": {
            "$ref": "#/components/schemas/EmailConfigurationFooter_fr"
          },
          "en": {
            "$ref": "#/components/schemas/EmailConfigurationFooter_fr"
          },
          "de": {
            "$ref": "#/components/schemas/EmailConfigurationFooter_fr"
          },
          "it": {
            "$ref": "#/components/schemas/EmailConfigurationFooter_fr"
          },
          "es": {
            "$ref": "#/components/schemas/EmailConfigurationFooter_fr"
          }
        }
      },
      "Document": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CollectionId"
          },
          {
            "$ref": "#/components/schemas/DocumentBody"
          }
        ]
      },
      "DocumentBody": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "MyDocument.pdf"
          }
        }
      },
      "Payment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CollectionId"
          },
          {
            "$ref": "#/components/schemas/ExternalPaymentBody"
          },
          {
            "type": "object",
            "properties": {
              "total_including_taxes": {
                "$ref": "#/components/schemas/CurrencyPriceSet"
              },
              "total_excluding_taxes": {
                "$ref": "#/components/schemas/CurrencyPriceSet"
              },
              "invoice_id": {
                "type": "string",
                "example": "636945e14ce97a4c1c561885"
              },
              "attachments": {
                "type": "array",
                "example": [
                  "myfile1.png",
                  "mydocument.pdf"
                ],
                "items": {
                  "type": "string"
                }
              },
              "client_name": {
                "type": "string",
                "example": "John Doe"
              }
            }
          }
        ]
      },
      "InvoicePaymentBody": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PaymentBody"
          },
          {
            "type": "object",
            "properties": {
              "amount": {
                "type": "string",
                "example": "123.21"
              }
            }
          }
        ]
      },
      "PaymentBody": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string",
            "example": "Subscription"
          },
          "date": {
            "type": "string",
            "example": "2023-05-28T11:48:21+02:00"
          },
          "note": {
            "type": "string",
            "example": "Client will provide the next payment tomorrow"
          },
          "bank_transaction_id": {
            "type": "string",
            "example": "5d5efds258126ab647499f9bf"
          },
          "method": {
            "type": "string",
            "enum": [
              "bank_transfert",
              "cash",
              "check",
              "cesu",
              "direct_debit",
              "credit_card",
              "other",
              "paypal"
            ]
          }
        }
      },
      "ExternalPaymentBody": {
        "allOf": [
          {
            "$ref": "#/components/schemas/PaymentBody"
          },
          {
            "type": "object",
            "properties": {
              "client_id": {
                "type": "string",
                "example": "5d5efds258126ab647499f9bf"
              },
              "activity_id": {
                "type": "string",
                "example": "5d5efds258126ab647499f9bf"
              },
              "reference": {
                "type": "string",
                "example": "AZE2334"
              },
              "currency": {
                "type": "string",
                "example": "EUR"
              },
              "taxes_liable": {
                "type": "boolean"
              },
              "lines": {
                "type": "array",
                "example": [
                  {
                    "title": "Homepage design",
                    "type": "goods",
                    "amount": 120.32,
                    "tax_rate": 20,
                    "origin_country_code": "FR"
                  },
                  {
                    "title": "Logo",
                    "type": "services",
                    "amount": 233.5,
                    "tax_rate": 20,
                    "origin_country_code": "FR"
                  }
                ],
                "items": {
                  "$ref": "#/components/schemas/ExternalPaymentLine"
                }
              }
            }
          }
        ]
      },
      "ExternalPaymentLine": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "goods",
              "services",
              "other_services",
              "disbursement_fees"
            ]
          },
          "amount": {
            "type": "string"
          },
          "tax_rate": {
            "type": "string"
          },
          "origin_country_code": {
            "type": "string"
          }
        }
      },
      "ExpenseAttributes": {
        "type": "object",
        "properties": {
          "total_including_taxes": {
            "$ref": "#/components/schemas/CurrencyPriceSet"
          },
          "total_excluding_taxes": {
            "$ref": "#/components/schemas/CurrencyPriceSet"
          },
          "attachments": {
            "type": "array",
            "example": [
              "myfile1.png",
              "mydocument.pdf"
            ],
            "items": {
              "type": "string"
            }
          },
          "supplier_name": {
            "type": "string",
            "example": "John Doe"
          },
          "type_name": {
            "type": "string",
            "example": "Marketing"
          }
        }
      },
      "Expense": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CollectionId"
          },
          {
            "$ref": "#/components/schemas/ExpenseBody"
          },
          {
            "$ref": "#/components/schemas/ExpenseAttributes"
          }
        ]
      },
      "RecurringExpense": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CollectionId"
          },
          {
            "$ref": "#/components/schemas/CommonExpenseBody"
          },
          {
            "$ref": "#/components/schemas/ExpenseAttributes"
          },
          {
            "$ref": "#/components/schemas/RecurringBody"
          },
          {
            "$ref": "#/components/schemas/RecurringAttributes"
          }
        ]
      },
      "RecurringExpenseBody": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CommonExpenseBody"
          },
          {
            "$ref": "#/components/schemas/RecurringBody"
          }
        ]
      },
      "ExpenseBody": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CommonExpenseBody"
          },
          {
            "type": "object",
            "properties": {
              "date": {
                "type": "string",
                "example": "2023-05-28T11:48:21+02:00"
              },
              "bank_transaction_id": {
                "type": "string",
                "example": "5d5efds258126ab647499f9bf"
              }
            }
          }
        ]
      },
      "ExpenseTypeBody": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Marketing"
          }
        }
      },
      "CommonExpenseBody": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "string",
            "example": "123.21"
          },
          "currency": {
            "type": "string",
            "example": "EUR"
          },
          "reference": {
            "type": "string",
            "example": "ERT234"
          },
          "label": {
            "type": "string",
            "example": "Subscription"
          },
          "note": {
            "type": "string",
            "example": "Payment for the restaurant"
          },
          "activity_id": {
            "type": "string",
            "example": "h234ghjf13jhDf"
          },
          "type_id": {
            "type": "string",
            "example": "1ds234d56ffgds7896rs"
          },
          "supplier_id": {
            "type": "string",
            "example": "4f88dfd54gfd784refdd"
          },
          "tax_mode": {
            "type": "string",
            "enum": [
              "percentage",
              "amount"
            ]
          },
          "tax_amount": {
            "type": "string",
            "example": "65.23"
          },
          "payment_method": {
            "type": "string",
            "enum": [
              "bank_transfert",
              "cash",
              "check",
              "cesu",
              "direct_debit",
              "credit_card",
              "other",
              "paypal"
            ]
          }
        }
      },
      "Client": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CollectionId"
          },
          {
            "$ref": "#/components/schemas/ClientBody"
          },
          {
            "type": "object",
            "properties": {
              "attachments": {
                "type": "array",
                "example": [
                  "myfile1.png",
                  "mydocument.pdf"
                ],
                "items": {
                  "type": "string"
                }
              },
              "display_name": {
                "type": "string",
                "example": "John Doe"
              },
              "additional_notes": {
                "type": "array",
                "example": [
                  {
                    "date": "2023-05-28T11:48:21+02:00",
                    "title": "My first note",
                    "content": "This the content of this wonderful note"
                  },
                  {
                    "date": "2023-05-28T11:48:21+02:00",
                    "title": "Another note",
                    "content": "Just another note content"
                  }
                ],
                "items": {
                  "$ref": "#/components/schemas/AdditionalNote"
                }
              }
            }
          }
        ]
      },
      "ClientBody": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "individual",
              "company"
            ]
          },
          "last_name": {
            "type": "string",
            "example": "Doe"
          },
          "first_name": {
            "type": "string",
            "example": "John"
          },
          "email": {
            "type": "string",
            "example": "john.doe@google.com"
          },
          "phone": {
            "type": "string",
            "example": "842403924"
          },
          "company_name": {
            "type": "string",
            "example": "Doe's company"
          },
          "address": {
            "type": "string",
            "example": "123 rue des archives"
          },
          "address_supplement": {
            "type": "string",
            "example": "Porte gauche"
          },
          "zip": {
            "type": "string",
            "example": "A1234"
          },
          "city": {
            "type": "string",
            "example": "Paris"
          },
          "country_code": {
            "type": "string",
            "example": "FR"
          },
          "vat_number": {
            "type": "string",
            "example": "FR123456789"
          }
        }
      },
      "Supplier": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CollectionId"
          },
          {
            "$ref": "#/components/schemas/SupplierBody"
          },
          {
            "type": "object",
            "properties": {
              "attachments": {
                "type": "array",
                "example": [
                  "myfile1.png",
                  "mydocument.pdf"
                ],
                "items": {
                  "type": "string"
                }
              },
              "display_name": {
                "type": "string",
                "example": "John Doe"
              },
              "additional_notes": {
                "type": "array",
                "example": [
                  {
                    "date": "2023-05-28T11:48:21+02:00",
                    "title": "My first note",
                    "content": "This the content of this wonderful note"
                  },
                  {
                    "date": "2023-05-28T11:48:21+02:00",
                    "title": "Another note",
                    "content": "Just another note content"
                  }
                ],
                "items": {
                  "$ref": "#/components/schemas/AdditionalNote"
                }
              }
            }
          }
        ]
      },
      "SupplierBody": {
        "type": "object",
        "properties": {
          "last_name": {
            "type": "string",
            "example": "Doe"
          },
          "first_name": {
            "type": "string",
            "example": "John"
          },
          "email": {
            "type": "string",
            "example": "john.doe@google.com"
          },
          "phone": {
            "type": "string",
            "example": "842403924"
          },
          "company_name": {
            "type": "string",
            "example": "Doe's company"
          },
          "address": {
            "type": "string",
            "example": "123 rue des archives"
          },
          "address_supplement": {
            "type": "string",
            "example": "Porte gauche"
          },
          "zip": {
            "type": "string",
            "example": "A1234"
          },
          "city": {
            "type": "string",
            "example": "Paris"
          },
          "country_code": {
            "type": "string",
            "example": "FR"
          }
        }
      },
      "AdditionalNote": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AdditionalNoteBody"
          },
          {
            "type": "object",
            "properties": {
              "date": {
                "type": "string",
                "example": "2023-05-28T11:48:21+02:00"
              }
            }
          }
        ]
      },
      "AdditionalNoteBody": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "My first note"
          },
          "content": {
            "type": "string",
            "example": "This the content of this wonderful note"
          }
        }
      },
      "TaxLiability": {
        "type": "object",
        "properties": {
          "taxable_country_code": {
            "type": "string",
            "example": "FR"
          },
          "taxes_liable": {
            "type": "boolean"
          },
          "tax_exemption_text": {
            "type": "string",
            "example": "Article 138 CE/2008"
          }
        }
      },
      "InvoiceListSummary": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "example": 123
          },
          "paid": {
            "type": "integer",
            "example": 110
          },
          "not_paid": {
            "type": "integer",
            "example": 2
          },
          "overdue": {
            "type": "integer",
            "example": 6
          },
          "cancelled": {
            "type": "integer",
            "example": 1
          },
          "draft": {
            "type": "integer",
            "example": 4
          }
        }
      },
      "CreditNoteListSummary": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "example": 123
          },
          "issued": {
            "type": "integer",
            "example": 110
          },
          "draft": {
            "type": "integer",
            "example": 13
          }
        }
      },
      "QuoteListSummary": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "example": 123
          },
          "accepted": {
            "type": "integer",
            "example": 110
          },
          "declined": {
            "type": "integer",
            "example": 2
          },
          "pending": {
            "type": "integer",
            "example": 6
          },
          "closed": {
            "type": "integer",
            "example": 1
          },
          "draft": {
            "type": "integer",
            "example": 4
          }
        }
      },
      "DeliveryFormListSummary": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "example": 123
          },
          "draft": {
            "type": "integer",
            "example": 4
          },
          "issued": {
            "type": "integer",
            "example": 119
          }
        }
      },
      "ExpenseListSummary": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "example": 123
          },
          "with_attachment": {
            "type": "integer",
            "example": 110
          },
          "without_attachment": {
            "type": "integer",
            "example": 13
          }
        }
      },
      "BankItemListSummary": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "example": 143
          },
          "pending": {
            "type": "integer",
            "example": 110
          },
          "associated": {
            "type": "integer",
            "example": 13
          },
          "ignored": {
            "type": "integer",
            "example": 10
          }
        }
      },
      "PaymentListSummary": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "example": 123
          },
          "payment": {
            "type": "integer",
            "example": 110
          },
          "refund": {
            "type": "integer",
            "example": 13
          }
        }
      },
      "ClientListSummary": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "example": 123
          },
          "individual": {
            "type": "integer",
            "example": 110
          },
          "company": {
            "type": "integer",
            "example": 13
          }
        }
      },
      "TotalCountList": {
        "type": "object",
        "properties": {
          "total_count": {
            "type": "integer",
            "example": 1234
          }
        }
      },
      "CreditNoteList": {
        "type": "object",
        "properties": {
          "credit_notes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreditNote"
            }
          }
        }
      },
      "InvoiceList": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TotalCountList"
          },
          {
            "type": "object",
            "properties": {
              "summary": {
                "$ref": "#/components/schemas/InvoiceListSummary"
              },
              "invoices": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            }
          }
        ]
      },
      "RecurringInvoiceList": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TotalCountList"
          },
          {
            "type": "object",
            "properties": {
              "recurring_invoices": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RecurringInvoice"
                }
              }
            }
          }
        ]
      },
      "BankRuleList": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TotalCountList"
          },
          {
            "type": "object",
            "properties": {
              "recurring_invoices": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BankRule"
                }
              }
            }
          }
        ]
      },
      "RecurringExpenseList": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TotalCountList"
          },
          {
            "type": "object",
            "properties": {
              "bank_rules": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/RecurringExpense"
                }
              }
            }
          }
        ]
      },
      "QuoteList": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TotalCountList"
          },
          {
            "type": "object",
            "properties": {
              "summary": {
                "$ref": "#/components/schemas/QuoteListSummary"
              },
              "quotes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Quote"
                }
              }
            }
          }
        ]
      },
      "DeliveryFormList": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TotalCountList"
          },
          {
            "type": "object",
            "properties": {
              "summary": {
                "$ref": "#/components/schemas/DeliveryFormListSummary"
              },
              "quotes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DeliveryForm"
                }
              }
            }
          }
        ]
      },
      "ClientList": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TotalCountList"
          },
          {
            "type": "object",
            "properties": {
              "summary": {
                "$ref": "#/components/schemas/ClientListSummary"
              },
              "clients": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Client"
                }
              }
            }
          }
        ]
      },
      "ClientTopList": {
        "type": "object",
        "properties": {
          "clients": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Client"
            }
          }
        }
      },
      "SupplierList": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TotalCountList"
          },
          {
            "type": "object",
            "properties": {
              "suppliers": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Supplier"
                }
              }
            }
          }
        ]
      },
      "SupplierTopList": {
        "type": "object",
        "properties": {
          "suppliers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Supplier"
            }
          }
        }
      },
      "PaymentList": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TotalCountList"
          },
          {
            "type": "object",
            "properties": {
              "summary": {
                "$ref": "#/components/schemas/PaymentListSummary"
              },
              "payments": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            }
          }
        ]
      },
      "InvoicePaymentList": {
        "type": "object",
        "properties": {
          "payments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Payment"
            }
          }
        }
      },
      "ExpenseList": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TotalCountList"
          },
          {
            "type": "object",
            "properties": {
              "summary": {
                "$ref": "#/components/schemas/ExpenseListSummary"
              },
              "expenses": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Expense"
                }
              }
            }
          }
        ]
      },
      "ActivityList": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TotalCountList"
          },
          {
            "type": "object",
            "properties": {
              "activities": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Activity"
                }
              }
            }
          }
        ]
      },
      "UrssafStatementList": {
        "type": "object",
        "properties": {
          "statements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UrssafReportStatement"
            }
          }
        }
      },
      "DocumentList": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TotalCountList"
          },
          {
            "type": "object",
            "properties": {
              "documents": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Document"
                }
              }
            }
          }
        ]
      },
      "BankTransactionList": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TotalCountList"
          },
          {
            "type": "object",
            "properties": {
              "summary": {
                "$ref": "#/components/schemas/BankItemListSummary"
              },
              "transactions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BankTransaction"
                }
              }
            }
          }
        ]
      },
      "BankAccountList": {
        "type": "object",
        "properties": {
          "accounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BankAccount"
            }
          }
        }
      },
      "BankItemList": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TotalCountList"
          },
          {
            "type": "object",
            "properties": {
              "banks": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/BankItem"
                }
              }
            }
          }
        ]
      },
      "ArticleList": {
        "allOf": [
          {
            "$ref": "#/components/schemas/TotalCountList"
          },
          {
            "type": "object",
            "properties": {
              "articles": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Article"
                }
              }
            }
          }
        ]
      },
      "ArticleTopList": {
        "type": "object",
        "properties": {
          "articles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Article"
            }
          }
        }
      },
      "CountryList": {
        "type": "object",
        "properties": {
          "countries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Country"
            }
          }
        }
      },
      "IntegrationList": {
        "type": "object",
        "properties": {
          "integrations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Integration"
            }
          }
        }
      },
      "CurrencyList": {
        "type": "object",
        "properties": {
          "currencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Currency"
            }
          }
        }
      },
      "ExpenseTypesList": {
        "type": "object",
        "properties": {
          "expense_types": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExpenseType"
            }
          }
        }
      },
      "VatRatesList": {
        "type": "object",
        "properties": {
          "vat_rates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VatRate"
            }
          }
        }
      },
      "CollectionId": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "5d5eca258126ab647499f9bf"
          }
        }
      },
      "BillOfSaleAttributes": {
        "type": "object",
        "properties": {
          "events": {
            "type": "array",
            "example": [
              {
                "date": "2023-05-28T11:48:21+02:00",
                "key": "invoice.history.paymentAdded",
                "values": {
                  "total": 23.32,
                  "currency": "€"
                }
              },
              {
                "date": "2023-05-28T11:48:21+02:00",
                "key": "invoice.history.issued"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/BillOfSaleAttributes_events"
            }
          },
          "total_including_taxes": {
            "$ref": "#/components/schemas/CurrencyPriceSet"
          },
          "total_excluding_taxes": {
            "$ref": "#/components/schemas/CurrencyPriceSet"
          },
          "date": {
            "type": "string",
            "example": "2023-05-28T11:48:21+02:00"
          },
          "name": {
            "type": "string",
            "example": "202212345"
          },
          "client_name": {
            "type": "string",
            "example": "John Doe"
          }
        }
      },
      "ContactAddress": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Address"
          },
          {
            "type": "object",
            "properties": {
              "last_name": {
                "type": "string",
                "example": "Doe"
              },
              "first_name": {
                "type": "string",
                "example": "John"
              },
              "company_name": {
                "type": "string",
                "example": "John's company"
              },
              "vat_number": {
                "type": "string",
                "example": "FR123456789"
              },
              "display_name": {
                "type": "string",
                "example": "John Doe"
              }
            }
          }
        ]
      },
      "CurrencyPriceSet": {
        "type": "object",
        "properties": {
          "billed_currency": {
            "$ref": "#/components/schemas/CurrencyPriceSet_billed_currency"
          },
          "local_currency": {
            "$ref": "#/components/schemas/CurrencyPriceSet_local_currency"
          }
        }
      },
      "Address": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "example": "123 rue des archives"
          },
          "address_supplement": {
            "type": "string",
            "example": "Porte gauche"
          },
          "zip": {
            "type": "string",
            "example": "A1234"
          },
          "city": {
            "type": "string",
            "example": "Paris"
          },
          "country_code": {
            "type": "string",
            "example": "FR"
          }
        }
      },
      "BillOfSaleLine": {
        "type": "object",
        "properties": {
          "sku": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "goods",
              "services",
              "other_services",
              "disbursement_fees"
            ]
          },
          "price": {
            "type": "string"
          },
          "quantity": {
            "type": "string"
          },
          "unit": {
            "type": "string",
            "enum": [
              "piece",
              "hour",
              "day",
              "meter",
              "kilometer",
              "kilogram",
              "square_meter"
            ]
          },
          "discount_amount": {
            "type": "string"
          },
          "discount_type": {
            "type": "string",
            "enum": [
              "percentage",
              "fixed"
            ]
          },
          "tax_rate": {
            "type": "string"
          },
          "origin_country_code": {
            "type": "string"
          },
          "second_hand_good": {
            "type": "boolean"
          },
          "article_id": {
            "type": "string"
          }
        }
      },
      "BillOfSaleBody": {
        "type": "object",
        "properties": {
          "currency": {
            "type": "string",
            "example": "EUR"
          },
          "discount_amount": {
            "type": "string",
            "example": "12.20"
          },
          "discount_type": {
            "type": "string",
            "enum": [
              "percentage",
              "fixed"
            ]
          },
          "rebate_rate": {
            "type": "string",
            "example": "10.00"
          },
          "late_penalty_rate": {
            "type": "string",
            "example": "20.00"
          },
          "activity_id": {
            "type": "string",
            "example": "5d5efds258126ab647499f9bf"
          },
          "template": {
            "type": "string",
            "enum": [
              "basic",
              "london",
              "paris",
              "berlin"
            ]
          },
          "shipping_amount": {
            "type": "string",
            "example": "4.50"
          },
          "shipping_tax_rate": {
            "type": "string",
            "example": "20.00"
          },
          "taxes_liable": {
            "type": "boolean"
          },
          "taxes_included": {
            "type": "boolean"
          },
          "client_id": {
            "type": "string",
            "example": "54tefds258126ab647499f9bf"
          },
          "billing_address": {
            "$ref": "#/components/schemas/ContactAddress"
          },
          "subject": {
            "type": "string",
            "example": "Design of the homepage"
          },
          "lines": {
            "type": "array",
            "example": [
              {
                "sku": "AX123",
                "description": "Mockup and copywriting",
                "title": "Homepage design",
                "type": "goods",
                "price": 120.32,
                "quantity": 1,
                "unit": "piece",
                "discount_amount": 10,
                "discount_type": "percentage",
                "tax_rate": 20,
                "origin_country_code": "FR",
                "second_hand_good": false,
                "article_id": "5d5efds258126ab647499f9bf"
              },
              {
                "sku": "AX456",
                "description": "Logo with 3 colors",
                "title": "Logo design",
                "type": "goods",
                "price": 59,
                "quantity": 1,
                "unit": "piece",
                "discount_amount": 0,
                "discount_type": "percentage",
                "tax_rate": 20,
                "origin_country_code": "FR",
                "second_hand_good": false,
                "article_id": "5d5aaaa451ab647499f9bf"
              }
            ],
            "items": {
              "$ref": "#/components/schemas/BillOfSaleLine"
            }
          },
          "lines_groups": {
            "type": "array",
            "example": [
              {
                "name": "Design and mockup",
                "articles": [
                  0,
                  1
                ]
              }
            ],
            "items": {
              "$ref": "#/components/schemas/BillOfSaleBody_lines_groups"
            }
          },
          "comment": {
            "type": "string",
            "example": "Payment to be done within 3 days"
          },
          "payment_conditions_included": {
            "type": "boolean"
          },
          "language": {
            "type": "string",
            "enum": [
              "fr",
              "en",
              "de",
              "es",
              "it"
            ]
          },
          "tax_exemption_text": {
            "type": "string",
            "example": "Article 138 CE/2008"
          },
          "payment_methods": {
            "type": "array",
            "example": [
              "cash",
              "credit_card"
            ],
            "items": {
              "type": "string",
              "enum": [
                "bank_transfert",
                "cash",
                "check",
                "cesu",
                "direct_debit",
                "credit_card",
                "other",
                "paypal"
              ]
            }
          },
          "document_ids": {
            "type": "array",
            "example": [
              "5d5aaaa451ab647499f9bf",
              "45aa451ab6499999f9bf"
            ],
            "items": {
              "type": "string"
            }
          }
        }
      },
      "RecurringBody": {
        "type": "object",
        "properties": {
          "frequency": {
            "$ref": "#/components/schemas/RecurringFrequency"
          },
          "duration": {
            "$ref": "#/components/schemas/RecurringDuration"
          },
          "start_date": {
            "type": "string",
            "example": "2022-02-12"
          }
        }
      },
      "RecurringFrequency": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "weekly",
              "monthly",
              "quarterly",
              "yearly"
            ]
          },
          "occurrence_type": {
            "type": "string",
            "enum": [
              "day",
              "week",
              "month",
              "year"
            ]
          },
          "occurrence_value": {
            "type": "integer",
            "example": 2
          }
        }
      },
      "RecurringDuration": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "not_limited",
              "limited"
            ]
          },
          "end_date": {
            "type": "string",
            "example": "2023-02-12"
          }
        }
      },
      "AuthenticationBody": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "johndoe@google.com"
          },
          "password": {
            "type": "string",
            "example": "password123!"
          }
        }
      },
      "ForgotBody": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "johndoe@google.com"
          }
        }
      },
      "RegisterBody": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "johndoe@google.com"
          },
          "password": {
            "type": "string",
            "example": "password"
          }
        }
      },
      "BillOfSaleSendBody": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "example": "johndoe@google.com"
          },
          "title": {
            "type": "string",
            "example": "Here is your invoice"
          },
          "body": {
            "type": "string",
            "example": "Please find attached your invoice"
          }
        }
      },
      "AuthenticatedAccount": {
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOiIxMkRERkRGREZEIiwiaWF0IjoxNjYyMjAyMzYwLCJleHAiOjM2NjI0NjE1NjB9.4IerGtmliX_NI9IZ3l8wltpk7BW5zA7NxcPb_AKVMuA"
          },
          "type": {
            "type": "string",
            "example": "Bearer"
          },
          "user": {
            "$ref": "#/components/schemas/Account"
          },
          "company": {
            "$ref": "#/components/schemas/Company"
          }
        }
      },
      "InvoiceBody": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BillOfSaleBody"
          },
          {
            "type": "object",
            "properties": {
              "execution_date": {
                "type": "string",
                "example": "2023-05-28T11:48:21+02:00"
              },
              "due_date": {
                "type": "string",
                "example": "2023-05-28T11:48:21+02:00"
              },
              "online_payment_enabled": {
                "type": "boolean"
              },
              "payment_gateway_ids": {
                "type": "array",
                "example": [
                  "5d5eca258126ab647499f9bf",
                  "5b17da549a7feb695f703975"
                ],
                "items": {
                  "type": "string"
                }
              },
              "tracking_numbers": {
                "type": "array",
                "example": [
                  "456SDFDFD"
                ],
                "items": {
                  "type": "string"
                }
              },
              "tracking_carriers": {
                "type": "array",
                "example": [
                  "UPS"
                ],
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ]
      },
      "CreditNoteBody": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BillOfSaleBody"
          },
          {
            "type": "object",
            "properties": {
              "execution_date": {
                "type": "string",
                "example": "2023-05-28T11:48:21+02:00"
              }
            }
          }
        ]
      },
      "BulkDelete": {
        "type": "object",
        "properties": {
          "ids": {
            "type": "array",
            "example": [
              "5d5eca258126ab647499f9bf",
              "5b17da549a7feb695f703975"
            ],
            "items": {
              "type": "string"
            }
          }
        }
      },
      "ExportBody": {
        "type": "object",
        "properties": {
          "date_min": {
            "type": "string",
            "example": "2023-05-28T11:48:21+02:00"
          },
          "date_max": {
            "type": "string",
            "example": "2023-05-28T11:48:21+02:00"
          },
          "activity_ids": {
            "type": "array",
            "example": [
              "5d5eca258126ab647499f9bf",
              "5b17da549a7feb695f703975"
            ],
            "items": {
              "type": "string"
            }
          },
          "dry_run": {
            "type": "boolean"
          }
        }
      },
      "InvoiceExportBody": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ExportBody"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "csv",
                  "pdf"
                ]
              },
              "date_filter": {
                "type": "string",
                "enum": [
                  "issue_date",
                  "execution_date",
                  "paid_date"
                ]
              },
              "recipient": {
                "type": "string",
                "example": "john@google.com"
              },
              "client_ids": {
                "type": "array",
                "example": [
                  "5d5eca258126ab647499f9bf",
                  "5b17da549a7feb695f703975"
                ],
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ]
      },
      "PaymentExportBody": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ExportBody"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "csv",
                  "pdf"
                ]
              },
              "recipient": {
                "type": "string",
                "example": "john@google.com"
              },
              "client_ids": {
                "type": "array",
                "example": [
                  "5d5eca258126ab647499f9bf",
                  "5b17da549a7feb695f703975"
                ],
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ]
      },
      "ExpenseExportBody": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ExportBody"
          },
          {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "enum": [
                  "csv",
                  "pdf"
                ]
              },
              "recipient": {
                "type": "string",
                "example": "john@google.com"
              },
              "include_attachments": {
                "type": "boolean"
              },
              "supplier_ids": {
                "type": "array",
                "example": [
                  "5d5eca258126ab647499f9bf",
                  "5b17da549a7feb695f703975"
                ],
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ]
      },
      "RecurringInvoiceBody": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BillOfSaleBody"
          },
          {
            "$ref": "#/components/schemas/RecurringBody"
          },
          {
            "type": "object",
            "properties": {
              "invoice_sending": {
                "type": "boolean"
              },
              "online_payment_enabled": {
                "type": "boolean"
              },
              "payment_gateway_ids": {
                "type": "array",
                "example": [
                  "5d5eca258126ab647499f9bf",
                  "5b17da549a7feb695f703975"
                ],
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ]
      },
      "RecurringAttributes": {
        "type": "object",
        "properties": {
          "next_occurrence_date": {
            "type": "string",
            "example": "2023-12-12"
          },
          "enabled": {
            "type": "boolean"
          }
        }
      },
      "QuoteBody": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BillOfSaleBody"
          },
          {
            "type": "object",
            "properties": {
              "expiration_date": {
                "type": "string",
                "example": "2023-05-28T11:48:21+02:00"
              },
              "payment_term": {
                "type": "string",
                "enum": [
                  "upon_invoice",
                  "upon_order",
                  "upon_15_net",
                  "upon_30_net",
                  "upon_45_net",
                  "upon_60_net",
                  "upon_30_end",
                  "upon_45_end",
                  "upon_30_end_offset_10",
                  "upon_30_end_offset_20"
                ]
              },
              "online_payment_enabled": {
                "type": "boolean"
              },
              "payment_gateway_ids": {
                "type": "array",
                "example": [
                  "5d5eca258126ab647499f9bf",
                  "5b17da549a7feb695f703975"
                ],
                "items": {
                  "type": "string"
                }
              }
            }
          }
        ]
      },
      "DeliveryFormBody": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BillOfSaleBody"
          }
        ]
      },
      "QuoteNote": {
        "type": "object",
        "properties": {
          "author": {
            "type": "string",
            "example": "John Doe"
          },
          "date": {
            "type": "string",
            "example": "2023-05-28T11:48:21+02:00"
          },
          "content": {
            "type": "string",
            "example": "This is great"
          }
        }
      },
      "QuoteBill": {
        "type": "object",
        "properties": {
          "down_payment_amount": {
            "type": "string",
            "example": "23.43"
          },
          "down_payment_amount_type": {
            "type": "string",
            "enum": [
              "percentage",
              "fixed"
            ]
          },
          "subject": {
            "type": "string",
            "example": "First down payment"
          },
          "comment": {
            "type": "string",
            "example": "To be paid within 30 days"
          }
        }
      },
      "BankTransaction": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "example": "2023-05-28T11:48:21+02:00"
          },
          "label": {
            "type": "string",
            "example": "Facebook ads"
          },
          "currency": {
            "type": "string",
            "example": "EUR"
          },
          "amount": {
            "type": "string",
            "example": "52.04"
          },
          "type": {
            "type": "string",
            "enum": [
              "income",
              "expense"
            ]
          },
          "status": {
            "type": "string",
            "enum": [
              "pending",
              "associated",
              "ignored"
            ]
          }
        }
      },
      "BankAccount": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 123456
          },
          "name": {
            "type": "string",
            "example": "Compte courant"
          },
          "enabled": {
            "type": "boolean"
          }
        }
      },
      "BankItem": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "BNP Paribas"
          },
          "logo": {
            "type": "string",
            "example": "https://www.bank.fr/logo"
          },
          "pending_transactions": {
            "type": "integer",
            "example": 8
          },
          "balance": {
            "type": "string",
            "example": "3425.23"
          },
          "currency": {
            "type": "string",
            "example": "EUR"
          },
          "synchronization_date": {
            "type": "string",
            "example": "2023-05-28T11:48:21+02:00"
          },
          "status": {
            "type": "string",
            "enum": [
              "connected",
              "disconnected",
              "error"
            ]
          }
        }
      },
      "Invoice": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CollectionId"
          },
          {
            "$ref": "#/components/schemas/InvoiceBody"
          },
          {
            "$ref": "#/components/schemas/BillOfSaleAttributes"
          },
          {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "enum": [
                  "draft",
                  "not_paid",
                  "paid",
                  "cancelled",
                  "overdue"
                ]
              },
              "paid_date": {
                "type": "string",
                "example": "2023-05-28T11:48:21+02:00"
              },
              "due_date": {
                "type": "string",
                "example": "2023-05-28T11:48:21+02:00"
              },
              "attachments": {
                "type": "array",
                "example": [
                  "myfile1.png",
                  "mydocument.pdf"
                ],
                "items": {
                  "type": "string"
                }
              },
              "client_address": {
                "$ref": "#/components/schemas/ContactAddress"
              }
            }
          }
        ]
      },
      "CreditNote": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CollectionId"
          },
          {
            "$ref": "#/components/schemas/CreditNoteBody"
          },
          {
            "$ref": "#/components/schemas/BillOfSaleAttributes"
          },
          {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "enum": [
                  "draft",
                  "issued"
                ]
              },
              "paid_date": {
                "type": "string",
                "example": "2023-05-28T11:48:21+02:00"
              },
              "attachments": {
                "type": "array",
                "example": [
                  "myfile1.png",
                  "mydocument.pdf"
                ],
                "items": {
                  "type": "string"
                }
              },
              "client_address": {
                "$ref": "#/components/schemas/ContactAddress"
              }
            }
          }
        ]
      },
      "RecurringInvoice": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CollectionId"
          },
          {
            "$ref": "#/components/schemas/InvoiceBody"
          },
          {
            "$ref": "#/components/schemas/BillOfSaleAttributes"
          },
          {
            "$ref": "#/components/schemas/RecurringInvoiceBody"
          },
          {
            "$ref": "#/components/schemas/RecurringAttributes"
          },
          {
            "type": "object",
            "properties": {
              "attachments": {
                "type": "array",
                "example": [
                  "myfile1.png",
                  "mydocument.pdf"
                ],
                "items": {
                  "type": "string"
                }
              },
              "client_address": {
                "$ref": "#/components/schemas/ContactAddress"
              }
            }
          }
        ]
      },
      "Quote": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CollectionId"
          },
          {
            "$ref": "#/components/schemas/QuoteBody"
          },
          {
            "$ref": "#/components/schemas/BillOfSaleAttributes"
          },
          {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "enum": [
                  "draft",
                  "accepted",
                  "declined",
                  "pending",
                  "closed"
                ]
              },
              "attachments": {
                "type": "array",
                "example": [
                  "myfile1.png",
                  "mydocument.pdf"
                ],
                "items": {
                  "type": "string"
                }
              },
              "annotations": {
                "type": "array",
                "example": [
                  {
                    "author": "Peter Parker",
                    "date": "2023-05-28T11:48:21+02:00",
                    "content": "This quote is great"
                  },
                  {
                    "author": "Google",
                    "date": "2023-05-28T11:48:21+02:00",
                    "content": "Thanks for the confirmation"
                  }
                ],
                "items": {
                  "$ref": "#/components/schemas/QuoteNote"
                }
              },
              "client_address": {
                "$ref": "#/components/schemas/ContactAddress"
              }
            }
          }
        ]
      },
      "DeliveryForm": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CollectionId"
          },
          {
            "$ref": "#/components/schemas/QuoteBody"
          },
          {
            "$ref": "#/components/schemas/BillOfSaleAttributes"
          },
          {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "enum": [
                  "draft",
                  "issued"
                ]
              },
              "attachments": {
                "type": "array",
                "example": [
                  "myfile1.png",
                  "mydocument.pdf"
                ],
                "items": {
                  "type": "string"
                }
              },
              "client_address": {
                "$ref": "#/components/schemas/ContactAddress"
              }
            }
          }
        ]
      },
      "AccountBody": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string",
            "example": "John"
          },
          "last_name": {
            "type": "string",
            "example": "Doe"
          },
          "email": {
            "type": "string",
            "example": "john@google.com"
          }
        }
      },
      "AccountPasswordBody": {
        "type": "object",
        "properties": {
          "current_password": {
            "type": "string",
            "example": "myoldpassword"
          },
          "new_password": {
            "type": "string",
            "example": "mynewpassword"
          }
        }
      },
      "AccountApiKeyBody": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "My API key"
          },
          "write_access": {
            "type": "boolean"
          }
        }
      },
      "AccountApiKey": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AccountApiKeyBody"
          },
          {
            "type": "object",
            "properties": {
              "hash": {
                "type": "string",
                "example": "jhfd567&hJKhfd094"
              }
            }
          }
        ]
      },
      "Account": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AccountBody"
          },
          {
            "type": "object",
            "properties": {
              "billing_provider": {
                "type": "string",
                "example": "chargebee"
              },
              "first_name": {
                "type": "string",
                "example": "John"
              },
              "last_name": {
                "type": "string",
                "example": "Doe"
              },
              "display_name": {
                "type": "string",
                "example": "John Doe"
              },
              "email": {
                "type": "string",
                "example": "john@google.com"
              },
              "subscription_term_date": {
                "type": "string",
                "example": "2023-05-28T11:48:21+02:00"
              },
              "subscription_status": {
                "type": "string",
                "enum": [
                  "trial",
                  "active",
                  "cancelled",
                  "non_renewing"
                ]
              },
              "api_keys": {
                "type": "array",
                "example": [
                  {
                    "name": "My key 1",
                    "hash": "fdfdskjl3243klfds07",
                    "write_access": true
                  },
                  {
                    "name": "My key 2",
                    "hash": "jdfhskR5422FGnbfd",
                    "write_access": false
                  }
                ],
                "items": {
                  "$ref": "#/components/schemas/AccountApiKey"
                }
              },
              "transient_attributes": {
                "type": "object",
                "additionalProperties": true
              }
            }
          }
        ]
      },
      "CompanyBody": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Address"
          },
          {
            "type": "object",
            "properties": {
              "legal_name": {
                "type": "string",
                "example": "John's company"
              },
              "registration_type": {
                "type": "string",
                "enum": [
                  "exempted",
                  "rcs",
                  "rm",
                  "rseirl",
                  "rcs_rm"
                ]
              },
              "registration_detail": {
                "type": "string",
                "example": "Bobigny"
              },
              "identification_number": {
                "type": "string",
                "example": "123456DS"
              },
              "vat_number": {
                "type": "string",
                "example": "123456DS"
              },
              "insurance_enabled": {
                "type": "boolean"
              },
              "insurance_company_name": {
                "type": "string",
                "example": "Super Insurance Company"
              },
              "insurance_geographic_coverage": {
                "type": "string",
                "example": "France"
              },
              "activity_type": {
                "type": "string",
                "enum": [
                  "goods",
                  "services",
                  "other_services"
                ]
              },
              "second_hand_goods_selling": {
                "type": "boolean"
              },
              "urssaf_statement_frequency": {
                "type": "string",
                "enum": [
                  "monthly",
                  "quarterly"
                ]
              },
              "income_tax_discharged": {
                "type": "boolean"
              },
              "acre_applied": {
                "type": "boolean"
              },
              "creation_date": {
                "type": "string",
                "example": "2023-05-28T11:48:21+02:00"
              },
              "share_capital": {
                "type": "string",
                "example": "3000.00"
              },
              "vat_liable": {
                "type": "boolean"
              },
              "vat_liability_date": {
                "type": "string",
                "example": "2023-05-28T11:48:21+02:00"
              },
              "oss_liable": {
                "type": "boolean"
              },
              "oss_liability_date": {
                "type": "string",
                "example": "2023-05-28T11:48:21+02:00"
              },
              "oss_threshold_exceeded": {
                "type": "boolean"
              },
              "oss_threshold_exceeding_date": {
                "type": "string",
                "example": "2023-05-28T11:48:21+02:00"
              },
              "ioss_liable": {
                "type": "boolean"
              },
              "ioss_liability_date": {
                "type": "string",
                "example": "2023-05-28T11:48:21+02:00"
              },
              "status": {
                "type": "string",
                "enum": [
                  "micro",
                  "ei",
                  "sarl",
                  "sas",
                  "other"
                ]
              }
            }
          }
        ]
      },
      "Company": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CompanyBody"
          }
        ]
      },
      "inline_response_200": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "example": 342
          }
        }
      },
      "invoices_import_body": {
        "type": "object",
        "properties": {
          "issue_drafts": {
            "type": "boolean"
          },
          "taxes_included": {
            "type": "boolean"
          },
          "file": {
            "type": "string",
            "format": "binary"
          }
        }
      },
      "id_attachments_body": {
        "type": "object",
        "properties": {
          "files": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "binary"
            }
          }
        }
      },
      "id_attachments_body_1": {
        "type": "object",
        "properties": {
          "files": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "binary"
            }
          }
        }
      },
      "id_attachments_body_2": {
        "type": "object",
        "properties": {
          "files": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "binary"
            }
          }
        }
      },
      "id_annotations_body": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "example": "This is great"
          },
          "author": {
            "type": "string",
            "example": "John Doe"
          }
        }
      },
      "id_attachments_body_3": {
        "type": "object",
        "properties": {
          "files": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "binary"
            }
          }
        }
      },
      "articles_import_body": {
        "type": "object",
        "properties": {
          "file": {
            "type": "string",
            "format": "binary"
          }
        }
      },
      "id_logo_body": {
        "type": "object",
        "properties": {
          "file": {
            "type": "string",
            "format": "binary"
          }
        }
      },
      "id_terms_body": {
        "type": "object",
        "properties": {
          "files": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "binary"
            }
          }
        }
      },
      "id_signature_body": {
        "type": "object",
        "properties": {
          "file": {
            "type": "string",
            "format": "binary"
          }
        }
      },
      "inline_response_200_1": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "example": "https://myportal.bizyness.fr"
          }
        }
      },
      "me_delete_body": {
        "type": "object",
        "properties": {
          "current_password": {
            "type": "string",
            "example": "mypassword"
          }
        }
      },
      "clients_import_body": {
        "type": "object",
        "properties": {
          "file": {
            "type": "string",
            "format": "binary"
          }
        }
      },
      "id_attachments_body_4": {
        "type": "object",
        "properties": {
          "files": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "binary"
            }
          }
        }
      },
      "id_attachments_body_5": {
        "type": "object",
        "properties": {
          "files": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "binary"
            }
          }
        }
      },
      "id_attachments_body_6": {
        "type": "object",
        "properties": {
          "files": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "binary"
            }
          }
        }
      },
      "payments_import_body": {
        "type": "object",
        "properties": {
          "file": {
            "type": "string",
            "format": "binary"
          }
        }
      },
      "id_attachments_body_7": {
        "type": "object",
        "properties": {
          "files": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "binary"
            }
          }
        }
      },
      "Currency_labels": {
        "type": "object",
        "properties": {
          "fr": {
            "type": "string",
            "example": "Euros"
          },
          "en": {
            "type": "string",
            "example": "Euros"
          }
        }
      },
      "Country_labels": {
        "type": "object",
        "properties": {
          "fr": {
            "type": "string",
            "example": "France"
          },
          "en": {
            "type": "string",
            "example": "France"
          }
        }
      },
      "ActivityBody_emails_configuration_logo": {
        "type": "object",
        "properties": {
          "fr": {
            "type": "boolean"
          },
          "en": {
            "type": "boolean"
          },
          "de": {
            "type": "boolean"
          },
          "it": {
            "type": "boolean"
          },
          "es": {
            "type": "boolean"
          }
        }
      },
      "ActivityBody_emails_configuration": {
        "type": "object",
        "properties": {
          "logo": {
            "$ref": "#/components/schemas/ActivityBody_emails_configuration_logo"
          },
          "title": {
            "$ref": "#/components/schemas/ActivityBody_emails_configuration_logo"
          },
          "footer": {
            "$ref": "#/components/schemas/EmailConfigurationFooter"
          },
          "invoice": {
            "$ref": "#/components/schemas/EmailConfigurationContent"
          },
          "credit_note": {
            "$ref": "#/components/schemas/EmailConfigurationContent"
          },
          "quote": {
            "$ref": "#/components/schemas/EmailConfigurationContent"
          },
          "delivery_form": {
            "$ref": "#/components/schemas/EmailConfigurationContent"
          }
        }
      },
      "EmailConfigurationContent_fr": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "this is my text"
          },
          "body": {
            "type": "string",
            "example": "this is my text"
          }
        }
      },
      "EmailConfigurationFooter_fr": {
        "type": "object",
        "properties": {
          "included": {
            "type": "boolean"
          },
          "top_left": {
            "type": "string",
            "example": "this is my text"
          },
          "top_right": {
            "type": "string",
            "example": "this is my text"
          },
          "bottom_left": {
            "type": "string",
            "example": "this is my text"
          },
          "bottom_right": {
            "type": "string",
            "example": "this is my text"
          }
        }
      },
      "BillOfSaleAttributes_events": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string"
          },
          "key": {
            "type": "string"
          },
          "values": {
            "type": "object",
            "additionalProperties": true
          }
        }
      },
      "CurrencyPriceSet_billed_currency": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "string",
            "example": "12.32"
          },
          "currency": {
            "type": "string",
            "example": "USD"
          }
        }
      },
      "CurrencyPriceSet_local_currency": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "string",
            "example": "34.22"
          },
          "currency": {
            "type": "string",
            "example": "EUR"
          }
        }
      },
      "BillOfSaleBody_lines_groups": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "articles": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          }
        }
      }
    },
    "responses": {
      "NotFound": {
        "description": "The specified resource was not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": {
              "code": 404,
              "message": "Resource not found"
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": {
              "code": 401,
              "message": "Unauthorized"
            }
          }
        }
      },
      "InternalServerError": {
        "description": "Internal Server Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": {
              "code": 500,
              "message": "Internal server error"
            }
          }
        }
      }
    },
    "parameters": {
      "OffsetParam": {
        "name": "offset",
        "in": "query",
        "description": "The (zero-based) offset of the first item returned in the collection. In a zero-based offset 0 is a correct value.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "minimum": 0,
          "type": "integer",
          "default": 0
        }
      },
      "LimitParam": {
        "name": "limit",
        "in": "query",
        "description": "The maximum number of entries to return. If the value exceeds the maximum, then the maximum value will be used.",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "maximum": 250,
          "minimum": 1,
          "type": "integer",
          "default": 100
        }
      },
      "KeywordParam": {
        "name": "keyword",
        "in": "query",
        "description": "The keyword to search for",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string"
        }
      },
      "SortParam": {
        "name": "sort",
        "in": "query",
        "description": "Sort records by attributes",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string"
        }
      },
      "ActivityParam": {
        "name": "activity_id",
        "in": "query",
        "description": "Filter records by activity",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string",
          "example": "5d5eca258126ab647499f9bf"
        }
      },
      "DateMinParam": {
        "name": "date_min",
        "in": "query",
        "description": "Filter records created at or after date",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string",
          "example": "2013-01-01"
        }
      },
      "DateMaxParam": {
        "name": "date_max",
        "in": "query",
        "description": "Filter records created at or before date",
        "required": false,
        "style": "form",
        "explode": true,
        "schema": {
          "type": "string",
          "example": "2013-01-31"
        }
      }
    },
    "securitySchemes": {
      "ApiKey": {
        "type": "apiKey",
        "name": "X-Api-Key",
        "in": "header"
      },
      "JWTAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}